'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="PREPRODUCCION")>  _
Partial Public Class DataS_Interno
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCLIENTE(instance As CLIENTE)
    End Sub
  Partial Private Sub UpdateCLIENTE(instance As CLIENTE)
    End Sub
  Partial Private Sub DeleteCLIENTE(instance As CLIENTE)
    End Sub
  Partial Private Sub InsertVENDEDOR(instance As VENDEDOR)
    End Sub
  Partial Private Sub UpdateVENDEDOR(instance As VENDEDOR)
    End Sub
  Partial Private Sub DeleteVENDEDOR(instance As VENDEDOR)
    End Sub
  Partial Private Sub InsertCOLABORADOR(instance As COLABORADOR)
    End Sub
  Partial Private Sub UpdateCOLABORADOR(instance As COLABORADOR)
    End Sub
  Partial Private Sub DeleteCOLABORADOR(instance As COLABORADOR)
    End Sub
  Partial Private Sub InsertORDEN_TRABAJO(instance As ORDEN_TRABAJO)
    End Sub
  Partial Private Sub UpdateORDEN_TRABAJO(instance As ORDEN_TRABAJO)
    End Sub
  Partial Private Sub DeleteORDEN_TRABAJO(instance As ORDEN_TRABAJO)
    End Sub
  Partial Private Sub InsertPERMISO(instance As PERMISO)
    End Sub
  Partial Private Sub UpdatePERMISO(instance As PERMISO)
    End Sub
  Partial Private Sub DeletePERMISO(instance As PERMISO)
    End Sub
  Partial Private Sub InsertPIEZA(instance As PIEZA)
    End Sub
  Partial Private Sub UpdatePIEZA(instance As PIEZA)
    End Sub
  Partial Private Sub DeletePIEZA(instance As PIEZA)
    End Sub
  Partial Private Sub InsertPROCESO(instance As PROCESO)
    End Sub
  Partial Private Sub UpdatePROCESO(instance As PROCESO)
    End Sub
  Partial Private Sub DeletePROCESO(instance As PROCESO)
    End Sub
  Partial Private Sub InsertPRODUCTO_MOVIMIENTO(instance As PRODUCTO_MOVIMIENTO)
    End Sub
  Partial Private Sub UpdatePRODUCTO_MOVIMIENTO(instance As PRODUCTO_MOVIMIENTO)
    End Sub
  Partial Private Sub DeletePRODUCTO_MOVIMIENTO(instance As PRODUCTO_MOVIMIENTO)
    End Sub
  Partial Private Sub InsertSECTOR(instance As SECTOR)
    End Sub
  Partial Private Sub UpdateSECTOR(instance As SECTOR)
    End Sub
  Partial Private Sub DeleteSECTOR(instance As SECTOR)
    End Sub
  Partial Private Sub InsertTAREA(instance As TAREA)
    End Sub
  Partial Private Sub UpdateTAREA(instance As TAREA)
    End Sub
  Partial Private Sub DeleteTAREA(instance As TAREA)
    End Sub
  Partial Private Sub InsertUSUARIO(instance As USUARIO)
    End Sub
  Partial Private Sub UpdateUSUARIO(instance As USUARIO)
    End Sub
  Partial Private Sub DeleteUSUARIO(instance As USUARIO)
    End Sub
  Partial Private Sub InsertRE_TRABAJO(instance As RE_TRABAJO)
    End Sub
  Partial Private Sub UpdateRE_TRABAJO(instance As RE_TRABAJO)
    End Sub
  Partial Private Sub DeleteRE_TRABAJO(instance As RE_TRABAJO)
    End Sub
  Partial Private Sub InsertPIEZA1(instance As PIEZA1)
    End Sub
  Partial Private Sub UpdatePIEZA1(instance As PIEZA1)
    End Sub
  Partial Private Sub DeletePIEZA1(instance As PIEZA1)
    End Sub
  Partial Private Sub InsertSOPORTE(instance As SOPORTE)
    End Sub
  Partial Private Sub UpdateSOPORTE(instance As SOPORTE)
    End Sub
  Partial Private Sub DeleteSOPORTE(instance As SOPORTE)
    End Sub
  Partial Private Sub InsertDETALLE_ORDEN_TRABAJO(instance As DETALLE_ORDEN_TRABAJO)
    End Sub
  Partial Private Sub UpdateDETALLE_ORDEN_TRABAJO(instance As DETALLE_ORDEN_TRABAJO)
    End Sub
  Partial Private Sub DeleteDETALLE_ORDEN_TRABAJO(instance As DETALLE_ORDEN_TRABAJO)
    End Sub
  Partial Private Sub InsertTICKET(instance As TICKET)
    End Sub
  Partial Private Sub UpdateTICKET(instance As TICKET)
    End Sub
  Partial Private Sub DeleteTICKET(instance As TICKET)
    End Sub
  Partial Private Sub InsertDESPACHO(instance As DESPACHO)
    End Sub
  Partial Private Sub UpdateDESPACHO(instance As DESPACHO)
    End Sub
  Partial Private Sub DeleteDESPACHO(instance As DESPACHO)
    End Sub
  Partial Private Sub InsertMENSAJE(instance As MENSAJE)
    End Sub
  Partial Private Sub UpdateMENSAJE(instance As MENSAJE)
    End Sub
  Partial Private Sub DeleteMENSAJE(instance As MENSAJE)
    End Sub
  Partial Private Sub InsertSUGERENCIA(instance As SUGERENCIA)
    End Sub
  Partial Private Sub UpdateSUGERENCIA(instance As SUGERENCIA)
    End Sub
  Partial Private Sub DeleteSUGERENCIA(instance As SUGERENCIA)
    End Sub
  Partial Private Sub InsertPRODUCTO(instance As PRODUCTO)
    End Sub
  Partial Private Sub UpdatePRODUCTO(instance As PRODUCTO)
    End Sub
  Partial Private Sub DeletePRODUCTO(instance As PRODUCTO)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SOLUCIONES_INTERNAS.My.MySettings.Default.SOLUCIONES_INTERNASConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property CLIENTE() As System.Data.Linq.Table(Of CLIENTE)
		Get
			Return Me.GetTable(Of CLIENTE)
		End Get
	End Property
	
	Public ReadOnly Property VENDEDOR() As System.Data.Linq.Table(Of VENDEDOR)
		Get
			Return Me.GetTable(Of VENDEDOR)
		End Get
	End Property
	
	Public ReadOnly Property COLABORADOR() As System.Data.Linq.Table(Of COLABORADOR)
		Get
			Return Me.GetTable(Of COLABORADOR)
		End Get
	End Property
	
	Public ReadOnly Property ORDEN_TRABAJO() As System.Data.Linq.Table(Of ORDEN_TRABAJO)
		Get
			Return Me.GetTable(Of ORDEN_TRABAJO)
		End Get
	End Property
	
	Public ReadOnly Property PERMISO() As System.Data.Linq.Table(Of PERMISO)
		Get
			Return Me.GetTable(Of PERMISO)
		End Get
	End Property
	
	Public ReadOnly Property PIEZA() As System.Data.Linq.Table(Of PIEZA)
		Get
			Return Me.GetTable(Of PIEZA)
		End Get
	End Property
	
	Public ReadOnly Property PROCESO() As System.Data.Linq.Table(Of PROCESO)
		Get
			Return Me.GetTable(Of PROCESO)
		End Get
	End Property
	
	Public ReadOnly Property PRODUCTO_MOVIMIENTO() As System.Data.Linq.Table(Of PRODUCTO_MOVIMIENTO)
		Get
			Return Me.GetTable(Of PRODUCTO_MOVIMIENTO)
		End Get
	End Property
	
	Public ReadOnly Property SECTOR() As System.Data.Linq.Table(Of SECTOR)
		Get
			Return Me.GetTable(Of SECTOR)
		End Get
	End Property
	
	Public ReadOnly Property TAREA() As System.Data.Linq.Table(Of TAREA)
		Get
			Return Me.GetTable(Of TAREA)
		End Get
	End Property
	
	Public ReadOnly Property USUARIO() As System.Data.Linq.Table(Of USUARIO)
		Get
			Return Me.GetTable(Of USUARIO)
		End Get
	End Property
	
	Public ReadOnly Property RE_TRABAJO() As System.Data.Linq.Table(Of RE_TRABAJO)
		Get
			Return Me.GetTable(Of RE_TRABAJO)
		End Get
	End Property
	
	Public ReadOnly Property PIEZA1() As System.Data.Linq.Table(Of PIEZA1)
		Get
			Return Me.GetTable(Of PIEZA1)
		End Get
	End Property
	
	Public ReadOnly Property SOPORTE() As System.Data.Linq.Table(Of SOPORTE)
		Get
			Return Me.GetTable(Of SOPORTE)
		End Get
	End Property
	
	Public ReadOnly Property DETALLE_ORDEN_TRABAJO() As System.Data.Linq.Table(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me.GetTable(Of DETALLE_ORDEN_TRABAJO)
		End Get
	End Property
	
	Public ReadOnly Property TICKET() As System.Data.Linq.Table(Of TICKET)
		Get
			Return Me.GetTable(Of TICKET)
		End Get
	End Property
	
	Public ReadOnly Property DESPACHO() As System.Data.Linq.Table(Of DESPACHO)
		Get
			Return Me.GetTable(Of DESPACHO)
		End Get
	End Property
	
	Public ReadOnly Property MENSAJE() As System.Data.Linq.Table(Of MENSAJE)
		Get
			Return Me.GetTable(Of MENSAJE)
		End Get
	End Property
	
	Public ReadOnly Property SUGERENCIA() As System.Data.Linq.Table(Of SUGERENCIA)
		Get
			Return Me.GetTable(Of SUGERENCIA)
		End Get
	End Property
	
	Public ReadOnly Property PRODUCTO() As System.Data.Linq.Table(Of PRODUCTO)
		Get
			Return Me.GetTable(Of PRODUCTO)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CLIENTE")>  _
Partial Public Class CLIENTE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CLI_id_cliente As Integer
	
	Private _CLI_razon_social As String
	
	Private _CLI_mail_cli As String
	
	Private _CLI_telefono_cli As String
	
	Private _CLI_domicilio As String
	
	Private _CLI_localidad As String
	
	Private _CLI_codigo_postal As String
	
	Private _ORDEN_TRABAJO As EntitySet(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCLI_id_clienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLI_id_clienteChanged()
    End Sub
    Partial Private Sub OnCLI_razon_socialChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_razon_socialChanged()
    End Sub
    Partial Private Sub OnCLI_mail_cliChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_mail_cliChanged()
    End Sub
    Partial Private Sub OnCLI_telefono_cliChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_telefono_cliChanged()
    End Sub
    Partial Private Sub OnCLI_domicilioChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_domicilioChanged()
    End Sub
    Partial Private Sub OnCLI_localidadChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_localidadChanged()
    End Sub
    Partial Private Sub OnCLI_codigo_postalChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_codigo_postalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ORDEN_TRABAJO = New EntitySet(Of ORDEN_TRABAJO)(AddressOf Me.attach_ORDEN_TRABAJO, AddressOf Me.detach_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_id_cliente", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CLI_id_cliente() As Integer
		Get
			Return Me._CLI_id_cliente
		End Get
		Set
			If ((Me._CLI_id_cliente = value)  _
						= false) Then
				Me.OnCLI_id_clienteChanging(value)
				Me.SendPropertyChanging
				Me._CLI_id_cliente = value
				Me.SendPropertyChanged("CLI_id_cliente")
				Me.OnCLI_id_clienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_razon_social", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CLI_razon_social() As String
		Get
			Return Me._CLI_razon_social
		End Get
		Set
			If (String.Equals(Me._CLI_razon_social, value) = false) Then
				Me.OnCLI_razon_socialChanging(value)
				Me.SendPropertyChanging
				Me._CLI_razon_social = value
				Me.SendPropertyChanged("CLI_razon_social")
				Me.OnCLI_razon_socialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_mail_cli", DbType:="VarChar(50)")>  _
	Public Property CLI_mail_cli() As String
		Get
			Return Me._CLI_mail_cli
		End Get
		Set
			If (String.Equals(Me._CLI_mail_cli, value) = false) Then
				Me.OnCLI_mail_cliChanging(value)
				Me.SendPropertyChanging
				Me._CLI_mail_cli = value
				Me.SendPropertyChanged("CLI_mail_cli")
				Me.OnCLI_mail_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_telefono_cli", DbType:="VarChar(15)")>  _
	Public Property CLI_telefono_cli() As String
		Get
			Return Me._CLI_telefono_cli
		End Get
		Set
			If (String.Equals(Me._CLI_telefono_cli, value) = false) Then
				Me.OnCLI_telefono_cliChanging(value)
				Me.SendPropertyChanging
				Me._CLI_telefono_cli = value
				Me.SendPropertyChanged("CLI_telefono_cli")
				Me.OnCLI_telefono_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_domicilio", DbType:="VarChar(50)")>  _
	Public Property CLI_domicilio() As String
		Get
			Return Me._CLI_domicilio
		End Get
		Set
			If (String.Equals(Me._CLI_domicilio, value) = false) Then
				Me.OnCLI_domicilioChanging(value)
				Me.SendPropertyChanging
				Me._CLI_domicilio = value
				Me.SendPropertyChanged("CLI_domicilio")
				Me.OnCLI_domicilioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_localidad", DbType:="VarChar(50)")>  _
	Public Property CLI_localidad() As String
		Get
			Return Me._CLI_localidad
		End Get
		Set
			If (String.Equals(Me._CLI_localidad, value) = false) Then
				Me.OnCLI_localidadChanging(value)
				Me.SendPropertyChanging
				Me._CLI_localidad = value
				Me.SendPropertyChanged("CLI_localidad")
				Me.OnCLI_localidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_codigo_postal", DbType:="VarChar(10)")>  _
	Public Property CLI_codigo_postal() As String
		Get
			Return Me._CLI_codigo_postal
		End Get
		Set
			If (String.Equals(Me._CLI_codigo_postal, value) = false) Then
				Me.OnCLI_codigo_postalChanging(value)
				Me.SendPropertyChanging
				Me._CLI_codigo_postal = value
				Me.SendPropertyChanged("CLI_codigo_postal")
				Me.OnCLI_codigo_postalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CLIENTE_ORDEN_TRABAJO", Storage:="_ORDEN_TRABAJO", ThisKey:="CLI_id_cliente", OtherKey:="CLI_id_cliente")>  _
	Public Property ORDEN_TRABAJO() As EntitySet(Of ORDEN_TRABAJO)
		Get
			Return Me._ORDEN_TRABAJO
		End Get
		Set
			Me._ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.CLIENTE = Me
	End Sub
	
	Private Sub detach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.CLIENTE = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VENDEDOR")>  _
Partial Public Class VENDEDOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VEN_id_vendedor As Integer
	
	Private _VEN_nombre_ven As String
	
	Private _VEN_apellido_ven As String
	
	Private _VEN_mail_ven As String
	
	Private _VEN_telefono_ven As String
	
	Private _ORDEN_TRABAJO As EntitySet(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanging(value As Integer)
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanged()
    End Sub
    Partial Private Sub OnVEN_nombre_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_nombre_venChanged()
    End Sub
    Partial Private Sub OnVEN_apellido_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_apellido_venChanged()
    End Sub
    Partial Private Sub OnVEN_mail_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_mail_venChanged()
    End Sub
    Partial Private Sub OnVEN_telefono_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_telefono_venChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ORDEN_TRABAJO = New EntitySet(Of ORDEN_TRABAJO)(AddressOf Me.attach_ORDEN_TRABAJO, AddressOf Me.detach_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_id_vendedor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property VEN_id_vendedor() As Integer
		Get
			Return Me._VEN_id_vendedor
		End Get
		Set
			If ((Me._VEN_id_vendedor = value)  _
						= false) Then
				Me.OnVEN_id_vendedorChanging(value)
				Me.SendPropertyChanging
				Me._VEN_id_vendedor = value
				Me.SendPropertyChanged("VEN_id_vendedor")
				Me.OnVEN_id_vendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_nombre_ven", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property VEN_nombre_ven() As String
		Get
			Return Me._VEN_nombre_ven
		End Get
		Set
			If (String.Equals(Me._VEN_nombre_ven, value) = false) Then
				Me.OnVEN_nombre_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_nombre_ven = value
				Me.SendPropertyChanged("VEN_nombre_ven")
				Me.OnVEN_nombre_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_apellido_ven", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property VEN_apellido_ven() As String
		Get
			Return Me._VEN_apellido_ven
		End Get
		Set
			If (String.Equals(Me._VEN_apellido_ven, value) = false) Then
				Me.OnVEN_apellido_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_apellido_ven = value
				Me.SendPropertyChanged("VEN_apellido_ven")
				Me.OnVEN_apellido_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_mail_ven", DbType:="VarChar(50)")>  _
	Public Property VEN_mail_ven() As String
		Get
			Return Me._VEN_mail_ven
		End Get
		Set
			If (String.Equals(Me._VEN_mail_ven, value) = false) Then
				Me.OnVEN_mail_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_mail_ven = value
				Me.SendPropertyChanged("VEN_mail_ven")
				Me.OnVEN_mail_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_telefono_ven", DbType:="VarChar(15)")>  _
	Public Property VEN_telefono_ven() As String
		Get
			Return Me._VEN_telefono_ven
		End Get
		Set
			If (String.Equals(Me._VEN_telefono_ven, value) = false) Then
				Me.OnVEN_telefono_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_telefono_ven = value
				Me.SendPropertyChanged("VEN_telefono_ven")
				Me.OnVEN_telefono_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VENDEDOR_ORDEN_TRABAJO", Storage:="_ORDEN_TRABAJO", ThisKey:="VEN_id_vendedor", OtherKey:="VEN_id_vendedor")>  _
	Public Property ORDEN_TRABAJO() As EntitySet(Of ORDEN_TRABAJO)
		Get
			Return Me._ORDEN_TRABAJO
		End Get
		Set
			Me._ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.VENDEDOR = Me
	End Sub
	
	Private Sub detach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.VENDEDOR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COLABORADOR")>  _
Partial Public Class COLABORADOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COL_id_colaborador As Integer
	
	Private _COL_nombre_col As String
	
	Private _COL_apellido_col As String
	
	Private _SEC_id_sector As System.Nullable(Of Integer)
	
	Private _TAREA As EntitySet(Of TAREA)
	
	Private _USUARIO As EntitySet(Of USUARIO)
	
	Private _SECTOR As EntityRef(Of SECTOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanging(value As Integer)
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanged()
    End Sub
    Partial Private Sub OnCOL_nombre_colChanging(value As String)
    End Sub
    Partial Private Sub OnCOL_nombre_colChanged()
    End Sub
    Partial Private Sub OnCOL_apellido_colChanging(value As String)
    End Sub
    Partial Private Sub OnCOL_apellido_colChanged()
    End Sub
    Partial Private Sub OnSEC_id_sectorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEC_id_sectorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TAREA = New EntitySet(Of TAREA)(AddressOf Me.attach_TAREA, AddressOf Me.detach_TAREA)
		Me._USUARIO = New EntitySet(Of USUARIO)(AddressOf Me.attach_USUARIO, AddressOf Me.detach_USUARIO)
		Me._SECTOR = CType(Nothing, EntityRef(Of SECTOR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_id_colaborador", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property COL_id_colaborador() As Integer
		Get
			Return Me._COL_id_colaborador
		End Get
		Set
			If ((Me._COL_id_colaborador = value)  _
						= false) Then
				Me.OnCOL_id_colaboradorChanging(value)
				Me.SendPropertyChanging
				Me._COL_id_colaborador = value
				Me.SendPropertyChanged("COL_id_colaborador")
				Me.OnCOL_id_colaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_nombre_col", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property COL_nombre_col() As String
		Get
			Return Me._COL_nombre_col
		End Get
		Set
			If (String.Equals(Me._COL_nombre_col, value) = false) Then
				Me.OnCOL_nombre_colChanging(value)
				Me.SendPropertyChanging
				Me._COL_nombre_col = value
				Me.SendPropertyChanged("COL_nombre_col")
				Me.OnCOL_nombre_colChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_apellido_col", DbType:="VarChar(50)")>  _
	Public Property COL_apellido_col() As String
		Get
			Return Me._COL_apellido_col
		End Get
		Set
			If (String.Equals(Me._COL_apellido_col, value) = false) Then
				Me.OnCOL_apellido_colChanging(value)
				Me.SendPropertyChanging
				Me._COL_apellido_col = value
				Me.SendPropertyChanged("COL_apellido_col")
				Me.OnCOL_apellido_colChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEC_id_sector", DbType:="Int")>  _
	Public Property SEC_id_sector() As System.Nullable(Of Integer)
		Get
			Return Me._SEC_id_sector
		End Get
		Set
			If (Me._SEC_id_sector.Equals(value) = false) Then
				If Me._SECTOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSEC_id_sectorChanging(value)
				Me.SendPropertyChanging
				Me._SEC_id_sector = value
				Me.SendPropertyChanged("SEC_id_sector")
				Me.OnSEC_id_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_TAREA", Storage:="_TAREA", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador")>  _
	Public Property TAREA() As EntitySet(Of TAREA)
		Get
			Return Me._TAREA
		End Get
		Set
			Me._TAREA.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_USUARIO", Storage:="_USUARIO", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador")>  _
	Public Property USUARIO() As EntitySet(Of USUARIO)
		Get
			Return Me._USUARIO
		End Get
		Set
			Me._USUARIO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SECTOR_COLABORADOR", Storage:="_SECTOR", ThisKey:="SEC_id_sector", OtherKey:="SEC_id_sector", IsForeignKey:=true)>  _
	Public Property SECTOR() As SECTOR
		Get
			Return Me._SECTOR.Entity
		End Get
		Set
			Dim previousValue As SECTOR = Me._SECTOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SECTOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SECTOR.Entity = Nothing
					previousValue.COLABORADOR.Remove(Me)
				End If
				Me._SECTOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.COLABORADOR.Add(Me)
					Me._SEC_id_sector = value.SEC_id_sector
				Else
					Me._SEC_id_sector = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SECTOR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.COLABORADOR = Me
	End Sub
	
	Private Sub detach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.COLABORADOR = Nothing
	End Sub
	
	Private Sub attach_USUARIO(ByVal entity As USUARIO)
		Me.SendPropertyChanging
		entity.COLABORADOR = Me
	End Sub
	
	Private Sub detach_USUARIO(ByVal entity As USUARIO)
		Me.SendPropertyChanging
		entity.COLABORADOR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ORDEN_TRABAJO")>  _
Partial Public Class ORDEN_TRABAJO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ORT_id_orden_trabajo As Integer
	
	Private _ORT_fecha_ot As Date
	
	Private _ORT_tipo_ot As String
	
	Private _ORT_numero_ot As String
	
	Private _ORT_observaciones_ot As String
	
	Private _ORT_mejoras_ot As String
	
	Private _VEN_id_vendedor As Integer
	
	Private _CLI_id_cliente As Integer
	
	Private _ORT_fecha_entrega As System.Nullable(Of Date)
	
	Private _TAREA As EntitySet(Of TAREA)
	
	Private _DETALLE_ORDEN_TRABAJO As EntitySet(Of DETALLE_ORDEN_TRABAJO)
	
	Private _DESPACHO As EntitySet(Of DESPACHO)
	
	Private _CLIENTE As EntityRef(Of CLIENTE)
	
	Private _VENDEDOR As EntityRef(Of VENDEDOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As Integer)
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnORT_fecha_otChanging(value As Date)
    End Sub
    Partial Private Sub OnORT_fecha_otChanged()
    End Sub
    Partial Private Sub OnORT_tipo_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_tipo_otChanged()
    End Sub
    Partial Private Sub OnORT_numero_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_numero_otChanged()
    End Sub
    Partial Private Sub OnORT_observaciones_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_observaciones_otChanged()
    End Sub
    Partial Private Sub OnORT_mejoras_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_mejoras_otChanged()
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanging(value As Integer)
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanged()
    End Sub
    Partial Private Sub OnCLI_id_clienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLI_id_clienteChanged()
    End Sub
    Partial Private Sub OnORT_fecha_entregaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnORT_fecha_entregaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TAREA = New EntitySet(Of TAREA)(AddressOf Me.attach_TAREA, AddressOf Me.detach_TAREA)
		Me._DETALLE_ORDEN_TRABAJO = New EntitySet(Of DETALLE_ORDEN_TRABAJO)(AddressOf Me.attach_DETALLE_ORDEN_TRABAJO, AddressOf Me.detach_DETALLE_ORDEN_TRABAJO)
		Me._DESPACHO = New EntitySet(Of DESPACHO)(AddressOf Me.attach_DESPACHO, AddressOf Me.detach_DESPACHO)
		Me._CLIENTE = CType(Nothing, EntityRef(Of CLIENTE))
		Me._VENDEDOR = CType(Nothing, EntityRef(Of VENDEDOR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ORT_id_orden_trabajo() As Integer
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If ((Me._ORT_id_orden_trabajo = value)  _
						= false) Then
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_fecha_ot", DbType:="Date NOT NULL")>  _
	Public Property ORT_fecha_ot() As Date
		Get
			Return Me._ORT_fecha_ot
		End Get
		Set
			If ((Me._ORT_fecha_ot = value)  _
						= false) Then
				Me.OnORT_fecha_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_fecha_ot = value
				Me.SendPropertyChanged("ORT_fecha_ot")
				Me.OnORT_fecha_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_tipo_ot", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ORT_tipo_ot() As String
		Get
			Return Me._ORT_tipo_ot
		End Get
		Set
			If (String.Equals(Me._ORT_tipo_ot, value) = false) Then
				Me.OnORT_tipo_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_tipo_ot = value
				Me.SendPropertyChanged("ORT_tipo_ot")
				Me.OnORT_tipo_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_numero_ot", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ORT_numero_ot() As String
		Get
			Return Me._ORT_numero_ot
		End Get
		Set
			If (String.Equals(Me._ORT_numero_ot, value) = false) Then
				Me.OnORT_numero_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_numero_ot = value
				Me.SendPropertyChanged("ORT_numero_ot")
				Me.OnORT_numero_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_observaciones_ot", DbType:="VarChar(350)")>  _
	Public Property ORT_observaciones_ot() As String
		Get
			Return Me._ORT_observaciones_ot
		End Get
		Set
			If (String.Equals(Me._ORT_observaciones_ot, value) = false) Then
				Me.OnORT_observaciones_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_observaciones_ot = value
				Me.SendPropertyChanged("ORT_observaciones_ot")
				Me.OnORT_observaciones_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_mejoras_ot", DbType:="VarChar(250)")>  _
	Public Property ORT_mejoras_ot() As String
		Get
			Return Me._ORT_mejoras_ot
		End Get
		Set
			If (String.Equals(Me._ORT_mejoras_ot, value) = false) Then
				Me.OnORT_mejoras_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_mejoras_ot = value
				Me.SendPropertyChanged("ORT_mejoras_ot")
				Me.OnORT_mejoras_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_id_vendedor", DbType:="Int NOT NULL")>  _
	Public Property VEN_id_vendedor() As Integer
		Get
			Return Me._VEN_id_vendedor
		End Get
		Set
			If ((Me._VEN_id_vendedor = value)  _
						= false) Then
				If Me._VENDEDOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnVEN_id_vendedorChanging(value)
				Me.SendPropertyChanging
				Me._VEN_id_vendedor = value
				Me.SendPropertyChanged("VEN_id_vendedor")
				Me.OnVEN_id_vendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_id_cliente", DbType:="Int NOT NULL")>  _
	Public Property CLI_id_cliente() As Integer
		Get
			Return Me._CLI_id_cliente
		End Get
		Set
			If ((Me._CLI_id_cliente = value)  _
						= false) Then
				If Me._CLIENTE.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCLI_id_clienteChanging(value)
				Me.SendPropertyChanging
				Me._CLI_id_cliente = value
				Me.SendPropertyChanged("CLI_id_cliente")
				Me.OnCLI_id_clienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_fecha_entrega", DbType:="Date")>  _
	Public Property ORT_fecha_entrega() As System.Nullable(Of Date)
		Get
			Return Me._ORT_fecha_entrega
		End Get
		Set
			If (Me._ORT_fecha_entrega.Equals(value) = false) Then
				Me.OnORT_fecha_entregaChanging(value)
				Me.SendPropertyChanging
				Me._ORT_fecha_entrega = value
				Me.SendPropertyChanged("ORT_fecha_entrega")
				Me.OnORT_fecha_entregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_TAREA", Storage:="_TAREA", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo")>  _
	Public Property TAREA() As EntitySet(Of TAREA)
		Get
			Return Me._TAREA
		End Get
		Set
			Me._TAREA.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_DETALLE_ORDEN_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As EntitySet(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me._DETALLE_ORDEN_TRABAJO
		End Get
		Set
			Me._DETALLE_ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_DESPACHO", Storage:="_DESPACHO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo")>  _
	Public Property DESPACHO() As EntitySet(Of DESPACHO)
		Get
			Return Me._DESPACHO
		End Get
		Set
			Me._DESPACHO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CLIENTE_ORDEN_TRABAJO", Storage:="_CLIENTE", ThisKey:="CLI_id_cliente", OtherKey:="CLI_id_cliente", IsForeignKey:=true)>  _
	Public Property CLIENTE() As CLIENTE
		Get
			Return Me._CLIENTE.Entity
		End Get
		Set
			Dim previousValue As CLIENTE = Me._CLIENTE.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CLIENTE.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CLIENTE.Entity = Nothing
					previousValue.ORDEN_TRABAJO.Remove(Me)
				End If
				Me._CLIENTE.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ORDEN_TRABAJO.Add(Me)
					Me._CLI_id_cliente = value.CLI_id_cliente
				Else
					Me._CLI_id_cliente = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("CLIENTE")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VENDEDOR_ORDEN_TRABAJO", Storage:="_VENDEDOR", ThisKey:="VEN_id_vendedor", OtherKey:="VEN_id_vendedor", IsForeignKey:=true)>  _
	Public Property VENDEDOR() As VENDEDOR
		Get
			Return Me._VENDEDOR.Entity
		End Get
		Set
			Dim previousValue As VENDEDOR = Me._VENDEDOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._VENDEDOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._VENDEDOR.Entity = Nothing
					previousValue.ORDEN_TRABAJO.Remove(Me)
				End If
				Me._VENDEDOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ORDEN_TRABAJO.Add(Me)
					Me._VEN_id_vendedor = value.VEN_id_vendedor
				Else
					Me._VEN_id_vendedor = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("VENDEDOR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Nothing
	End Sub
	
	Private Sub attach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Nothing
	End Sub
	
	Private Sub attach_DESPACHO(ByVal entity As DESPACHO)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_DESPACHO(ByVal entity As DESPACHO)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PERMISO")>  _
Partial Public Class PERMISO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PER_id_permiso As Integer
	
	Private _PER_permiso As String
	
	Private _PER_abm As String
	
	Private _USU_id_usuario As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPER_id_permisoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPER_id_permisoChanged()
    End Sub
    Partial Private Sub OnPER_permisoChanging(value As String)
    End Sub
    Partial Private Sub OnPER_permisoChanged()
    End Sub
    Partial Private Sub OnPER_abmChanging(value As String)
    End Sub
    Partial Private Sub OnPER_abmChanged()
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PER_id_permiso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PER_id_permiso() As Integer
		Get
			Return Me._PER_id_permiso
		End Get
		Set
			If ((Me._PER_id_permiso = value)  _
						= false) Then
				Me.OnPER_id_permisoChanging(value)
				Me.SendPropertyChanging
				Me._PER_id_permiso = value
				Me.SendPropertyChanged("PER_id_permiso")
				Me.OnPER_id_permisoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PER_permiso", DbType:="VarChar(20)")>  _
	Public Property PER_permiso() As String
		Get
			Return Me._PER_permiso
		End Get
		Set
			If (String.Equals(Me._PER_permiso, value) = false) Then
				Me.OnPER_permisoChanging(value)
				Me.SendPropertyChanging
				Me._PER_permiso = value
				Me.SendPropertyChanged("PER_permiso")
				Me.OnPER_permisoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PER_abm", DbType:="VarChar(5)")>  _
	Public Property PER_abm() As String
		Get
			Return Me._PER_abm
		End Get
		Set
			If (String.Equals(Me._PER_abm, value) = false) Then
				Me.OnPER_abmChanging(value)
				Me.SendPropertyChanging
				Me._PER_abm = value
				Me.SendPropertyChanged("PER_abm")
				Me.OnPER_abmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_id_usuario", DbType:="Int")>  _
	Public Property USU_id_usuario() As System.Nullable(Of Integer)
		Get
			Return Me._USU_id_usuario
		End Get
		Set
			If (Me._USU_id_usuario.Equals(value) = false) Then
				Me.OnUSU_id_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._USU_id_usuario = value
				Me.SendPropertyChanged("USU_id_usuario")
				Me.OnUSU_id_usuarioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PIEZA")>  _
Partial Public Class PIEZA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PIE_id_pieza As Integer
	
	Private _PIE_nombre_pie As String
	
	Private _PIE_ubicacion As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntitySet(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPIE_id_piezaChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIE_id_piezaChanged()
    End Sub
    Partial Private Sub OnPIE_nombre_pieChanging(value As String)
    End Sub
    Partial Private Sub OnPIE_nombre_pieChanged()
    End Sub
    Partial Private Sub OnPIE_ubicacionChanging(value As String)
    End Sub
    Partial Private Sub OnPIE_ubicacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = New EntitySet(Of DETALLE_ORDEN_TRABAJO)(AddressOf Me.attach_DETALLE_ORDEN_TRABAJO, AddressOf Me.detach_DETALLE_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_id_pieza", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PIE_id_pieza() As Integer
		Get
			Return Me._PIE_id_pieza
		End Get
		Set
			If ((Me._PIE_id_pieza = value)  _
						= false) Then
				Me.OnPIE_id_piezaChanging(value)
				Me.SendPropertyChanging
				Me._PIE_id_pieza = value
				Me.SendPropertyChanged("PIE_id_pieza")
				Me.OnPIE_id_piezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_nombre_pie", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PIE_nombre_pie() As String
		Get
			Return Me._PIE_nombre_pie
		End Get
		Set
			If (String.Equals(Me._PIE_nombre_pie, value) = false) Then
				Me.OnPIE_nombre_pieChanging(value)
				Me.SendPropertyChanging
				Me._PIE_nombre_pie = value
				Me.SendPropertyChanged("PIE_nombre_pie")
				Me.OnPIE_nombre_pieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_ubicacion", DbType:="VarChar(1)")>  _
	Public Property PIE_ubicacion() As String
		Get
			Return Me._PIE_ubicacion
		End Get
		Set
			If (String.Equals(Me._PIE_ubicacion, value) = false) Then
				Me.OnPIE_ubicacionChanging(value)
				Me.SendPropertyChanging
				Me._PIE_ubicacion = value
				Me.SendPropertyChanged("PIE_ubicacion")
				Me.OnPIE_ubicacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PIEZA_DETALLE_ORDEN_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="PIE_id_pieza", OtherKey:="PIE_id_pieza")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As EntitySet(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me._DETALLE_ORDEN_TRABAJO
		End Get
		Set
			Me._DETALLE_ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.PIEZA = Me
	End Sub
	
	Private Sub detach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.PIEZA = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PROCESO")>  _
Partial Public Class PROCESO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROC_id_proceso As Integer
	
	Private _id_detalle_orden_trabajo As System.Nullable(Of Integer)
	
	Private _PROC_offset As String
	
	Private _PROC_descrip_offset As String
	
	Private _PROC_digital As String
	
	Private _PROC_descrip_digital As String
	
	Private _PROC_gran_formato As String
	
	Private _PROC_descrip_gran_formato As String
	
	Private _PROC_terminacion As String
	
	Private _PROC_descrip_terminacion As String
	
	Private _PROC_logistica As String
	
	Private _PROC_descrip_logistica As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntityRef(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROC_id_procesoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROC_id_procesoChanged()
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnPROC_offsetChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_offsetChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_offsetChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_offsetChanged()
    End Sub
    Partial Private Sub OnPROC_digitalChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_digitalChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_digitalChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_digitalChanged()
    End Sub
    Partial Private Sub OnPROC_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_gran_formatoChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_gran_formatoChanged()
    End Sub
    Partial Private Sub OnPROC_terminacionChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_terminacionChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_terminacionChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_terminacionChanged()
    End Sub
    Partial Private Sub OnPROC_logisticaChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_logisticaChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_logisticaChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_logisticaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = CType(Nothing, EntityRef(Of DETALLE_ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_id_proceso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROC_id_proceso() As Integer
		Get
			Return Me._PROC_id_proceso
		End Get
		Set
			If ((Me._PROC_id_proceso = value)  _
						= false) Then
				Me.OnPROC_id_procesoChanging(value)
				Me.SendPropertyChanging
				Me._PROC_id_proceso = value
				Me.SendPropertyChanged("PROC_id_proceso")
				Me.OnPROC_id_procesoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_detalle_orden_trabajo", DbType:="Int")>  _
	Public Property id_detalle_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._id_detalle_orden_trabajo
		End Get
		Set
			If (Me._id_detalle_orden_trabajo.Equals(value) = false) Then
				If Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_detalle_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._id_detalle_orden_trabajo = value
				Me.SendPropertyChanged("id_detalle_orden_trabajo")
				Me.Onid_detalle_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_offset", DbType:="VarChar(20)")>  _
	Public Property PROC_offset() As String
		Get
			Return Me._PROC_offset
		End Get
		Set
			If (String.Equals(Me._PROC_offset, value) = false) Then
				Me.OnPROC_offsetChanging(value)
				Me.SendPropertyChanging
				Me._PROC_offset = value
				Me.SendPropertyChanged("PROC_offset")
				Me.OnPROC_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_offset", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_offset() As String
		Get
			Return Me._PROC_descrip_offset
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_offset, value) = false) Then
				Me.OnPROC_descrip_offsetChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_offset = value
				Me.SendPropertyChanged("PROC_descrip_offset")
				Me.OnPROC_descrip_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_digital", DbType:="VarChar(20)")>  _
	Public Property PROC_digital() As String
		Get
			Return Me._PROC_digital
		End Get
		Set
			If (String.Equals(Me._PROC_digital, value) = false) Then
				Me.OnPROC_digitalChanging(value)
				Me.SendPropertyChanging
				Me._PROC_digital = value
				Me.SendPropertyChanged("PROC_digital")
				Me.OnPROC_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_digital", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_digital() As String
		Get
			Return Me._PROC_descrip_digital
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_digital, value) = false) Then
				Me.OnPROC_descrip_digitalChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_digital = value
				Me.SendPropertyChanged("PROC_descrip_digital")
				Me.OnPROC_descrip_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_gran_formato", DbType:="VarChar(50)")>  _
	Public Property PROC_gran_formato() As String
		Get
			Return Me._PROC_gran_formato
		End Get
		Set
			If (String.Equals(Me._PROC_gran_formato, value) = false) Then
				Me.OnPROC_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._PROC_gran_formato = value
				Me.SendPropertyChanged("PROC_gran_formato")
				Me.OnPROC_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_gran_formato", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_gran_formato() As String
		Get
			Return Me._PROC_descrip_gran_formato
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_gran_formato, value) = false) Then
				Me.OnPROC_descrip_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_gran_formato = value
				Me.SendPropertyChanged("PROC_descrip_gran_formato")
				Me.OnPROC_descrip_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_terminacion", DbType:="VarChar(50)")>  _
	Public Property PROC_terminacion() As String
		Get
			Return Me._PROC_terminacion
		End Get
		Set
			If (String.Equals(Me._PROC_terminacion, value) = false) Then
				Me.OnPROC_terminacionChanging(value)
				Me.SendPropertyChanging
				Me._PROC_terminacion = value
				Me.SendPropertyChanged("PROC_terminacion")
				Me.OnPROC_terminacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_terminacion", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_terminacion() As String
		Get
			Return Me._PROC_descrip_terminacion
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_terminacion, value) = false) Then
				Me.OnPROC_descrip_terminacionChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_terminacion = value
				Me.SendPropertyChanged("PROC_descrip_terminacion")
				Me.OnPROC_descrip_terminacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_logistica", DbType:="VarChar(50)")>  _
	Public Property PROC_logistica() As String
		Get
			Return Me._PROC_logistica
		End Get
		Set
			If (String.Equals(Me._PROC_logistica, value) = false) Then
				Me.OnPROC_logisticaChanging(value)
				Me.SendPropertyChanging
				Me._PROC_logistica = value
				Me.SendPropertyChanged("PROC_logistica")
				Me.OnPROC_logisticaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_logistica", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_logistica() As String
		Get
			Return Me._PROC_descrip_logistica
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_logistica, value) = false) Then
				Me.OnPROC_descrip_logisticaChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_logistica = value
				Me.SendPropertyChanged("PROC_descrip_logistica")
				Me.OnPROC_descrip_logisticaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_PROCESO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="id_detalle_orden_trabajo", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As DETALLE_ORDEN_TRABAJO
		Get
			Return Me._DETALLE_ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As DETALLE_ORDEN_TRABAJO = Me._DETALLE_ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._DETALLE_ORDEN_TRABAJO.Entity = Nothing
					previousValue.PROCESO.Remove(Me)
				End If
				Me._DETALLE_ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PROCESO.Add(Me)
					Me._id_detalle_orden_trabajo = value.id_detalle_orden_trabajo
				Else
					Me._id_detalle_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("DETALLE_ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRODUCTO_MOVIMIENTO")>  _
Partial Public Class PRODUCTO_MOVIMIENTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROD_MOV_id As Integer
	
	Private _PROD_MOV_fecha As System.Nullable(Of Date)
	
	Private _ORT_id_orden_trabajo As String
	
	Private _PROD_MOV_tipo As String
	
	Private _PROD_MOV_cantidad As System.Nullable(Of Integer)
	
	Private _PROD_id As Integer
	
	Private _PRODUCTO As EntityRef(Of PRODUCTO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROD_MOV_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_MOV_idChanged()
    End Sub
    Partial Private Sub OnPROD_MOV_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPROD_MOV_fechaChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As String)
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnPROD_MOV_tipoChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_MOV_tipoChanged()
    End Sub
    Partial Private Sub OnPROD_MOV_cantidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROD_MOV_cantidadChanged()
    End Sub
    Partial Private Sub OnPROD_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PRODUCTO = CType(Nothing, EntityRef(Of PRODUCTO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROD_MOV_id() As Integer
		Get
			Return Me._PROD_MOV_id
		End Get
		Set
			If ((Me._PROD_MOV_id = value)  _
						= false) Then
				Me.OnPROD_MOV_idChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_id = value
				Me.SendPropertyChanged("PROD_MOV_id")
				Me.OnPROD_MOV_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_fecha", DbType:="Date")>  _
	Public Property PROD_MOV_fecha() As System.Nullable(Of Date)
		Get
			Return Me._PROD_MOV_fecha
		End Get
		Set
			If (Me._PROD_MOV_fecha.Equals(value) = false) Then
				Me.OnPROD_MOV_fechaChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_fecha = value
				Me.SendPropertyChanged("PROD_MOV_fecha")
				Me.OnPROD_MOV_fechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="VarChar(15)")>  _
	Public Property ORT_id_orden_trabajo() As String
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (String.Equals(Me._ORT_id_orden_trabajo, value) = false) Then
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_tipo", DbType:="VarChar(15)")>  _
	Public Property PROD_MOV_tipo() As String
		Get
			Return Me._PROD_MOV_tipo
		End Get
		Set
			If (String.Equals(Me._PROD_MOV_tipo, value) = false) Then
				Me.OnPROD_MOV_tipoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_tipo = value
				Me.SendPropertyChanged("PROD_MOV_tipo")
				Me.OnPROD_MOV_tipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_cantidad", DbType:="Int")>  _
	Public Property PROD_MOV_cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._PROD_MOV_cantidad
		End Get
		Set
			If (Me._PROD_MOV_cantidad.Equals(value) = false) Then
				Me.OnPROD_MOV_cantidadChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_cantidad = value
				Me.SendPropertyChanged("PROD_MOV_cantidad")
				Me.OnPROD_MOV_cantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_id", DbType:="Int NOT NULL")>  _
	Public Property PROD_id() As Integer
		Get
			Return Me._PROD_id
		End Get
		Set
			If ((Me._PROD_id = value)  _
						= false) Then
				If Me._PRODUCTO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPROD_idChanging(value)
				Me.SendPropertyChanging
				Me._PROD_id = value
				Me.SendPropertyChanged("PROD_id")
				Me.OnPROD_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRODUCTO_PRODUCTO_MOVIMIENTO", Storage:="_PRODUCTO", ThisKey:="PROD_id", OtherKey:="PROD_id", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
	Public Property PRODUCTO() As PRODUCTO
		Get
			Return Me._PRODUCTO.Entity
		End Get
		Set
			Dim previousValue As PRODUCTO = Me._PRODUCTO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PRODUCTO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PRODUCTO.Entity = Nothing
					previousValue.PRODUCTO_MOVIMIENTO.Remove(Me)
				End If
				Me._PRODUCTO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PRODUCTO_MOVIMIENTO.Add(Me)
					Me._PROD_id = value.PROD_id
				Else
					Me._PROD_id = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("PRODUCTO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SECTOR")>  _
Partial Public Class SECTOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SEC_id_sector As Integer
	
	Private _SEC_nombre_sector As String
	
	Private _COLABORADOR As EntitySet(Of COLABORADOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSEC_id_sectorChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEC_id_sectorChanged()
    End Sub
    Partial Private Sub OnSEC_nombre_sectorChanging(value As String)
    End Sub
    Partial Private Sub OnSEC_nombre_sectorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._COLABORADOR = New EntitySet(Of COLABORADOR)(AddressOf Me.attach_COLABORADOR, AddressOf Me.detach_COLABORADOR)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEC_id_sector", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SEC_id_sector() As Integer
		Get
			Return Me._SEC_id_sector
		End Get
		Set
			If ((Me._SEC_id_sector = value)  _
						= false) Then
				Me.OnSEC_id_sectorChanging(value)
				Me.SendPropertyChanging
				Me._SEC_id_sector = value
				Me.SendPropertyChanged("SEC_id_sector")
				Me.OnSEC_id_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEC_nombre_sector", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property SEC_nombre_sector() As String
		Get
			Return Me._SEC_nombre_sector
		End Get
		Set
			If (String.Equals(Me._SEC_nombre_sector, value) = false) Then
				Me.OnSEC_nombre_sectorChanging(value)
				Me.SendPropertyChanging
				Me._SEC_nombre_sector = value
				Me.SendPropertyChanged("SEC_nombre_sector")
				Me.OnSEC_nombre_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SECTOR_COLABORADOR", Storage:="_COLABORADOR", ThisKey:="SEC_id_sector", OtherKey:="SEC_id_sector")>  _
	Public Property COLABORADOR() As EntitySet(Of COLABORADOR)
		Get
			Return Me._COLABORADOR
		End Get
		Set
			Me._COLABORADOR.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_COLABORADOR(ByVal entity As COLABORADOR)
		Me.SendPropertyChanging
		entity.SECTOR = Me
	End Sub
	
	Private Sub detach_COLABORADOR(ByVal entity As COLABORADOR)
		Me.SendPropertyChanging
		entity.SECTOR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TAREA")>  _
Partial Public Class TAREA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TAR_id_tarea As Integer
	
	Private _TAR_tiempo_estimado As String
	
	Private _TAR_tiempo_real As String
	
	Private _COL_id_colaborador As Integer
	
	Private _ORT_id_orden_trabajo As System.Nullable(Of Integer)
	
	Private _TAR_hora_fin As String
	
	Private _TAR_carga_horaria As String
	
	Private _TAR_detalle_tarea As String
	
	Private _TAR_observaciones As String
	
	Private _TAR_fecha As System.Nullable(Of Date)
	
	Private _TAR_entrada As String
	
	Private _TAR_salida As String
	
	Private _COLABORADOR As EntityRef(Of COLABORADOR)
	
	Private _ORDEN_TRABAJO As EntityRef(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTAR_id_tareaChanging(value As Integer)
    End Sub
    Partial Private Sub OnTAR_id_tareaChanged()
    End Sub
    Partial Private Sub OnTAR_tiempo_estimadoChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_tiempo_estimadoChanged()
    End Sub
    Partial Private Sub OnTAR_tiempo_realChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_tiempo_realChanged()
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanging(value As Integer)
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnTAR_hora_finChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_hora_finChanged()
    End Sub
    Partial Private Sub OnTAR_carga_horariaChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_carga_horariaChanged()
    End Sub
    Partial Private Sub OnTAR_detalle_tareaChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_detalle_tareaChanged()
    End Sub
    Partial Private Sub OnTAR_observacionesChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_observacionesChanged()
    End Sub
    Partial Private Sub OnTAR_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTAR_fechaChanged()
    End Sub
    Partial Private Sub OnTAR_entradaChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_entradaChanged()
    End Sub
    Partial Private Sub OnTAR_salidaChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_salidaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._COLABORADOR = CType(Nothing, EntityRef(Of COLABORADOR))
		Me._ORDEN_TRABAJO = CType(Nothing, EntityRef(Of ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_id_tarea", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TAR_id_tarea() As Integer
		Get
			Return Me._TAR_id_tarea
		End Get
		Set
			If ((Me._TAR_id_tarea = value)  _
						= false) Then
				Me.OnTAR_id_tareaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_id_tarea = value
				Me.SendPropertyChanged("TAR_id_tarea")
				Me.OnTAR_id_tareaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_tiempo_estimado", DbType:="VarChar(10)")>  _
	Public Property TAR_tiempo_estimado() As String
		Get
			Return Me._TAR_tiempo_estimado
		End Get
		Set
			If (String.Equals(Me._TAR_tiempo_estimado, value) = false) Then
				Me.OnTAR_tiempo_estimadoChanging(value)
				Me.SendPropertyChanging
				Me._TAR_tiempo_estimado = value
				Me.SendPropertyChanged("TAR_tiempo_estimado")
				Me.OnTAR_tiempo_estimadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_tiempo_real", DbType:="VarChar(10)")>  _
	Public Property TAR_tiempo_real() As String
		Get
			Return Me._TAR_tiempo_real
		End Get
		Set
			If (String.Equals(Me._TAR_tiempo_real, value) = false) Then
				Me.OnTAR_tiempo_realChanging(value)
				Me.SendPropertyChanging
				Me._TAR_tiempo_real = value
				Me.SendPropertyChanged("TAR_tiempo_real")
				Me.OnTAR_tiempo_realChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_id_colaborador", DbType:="Int NOT NULL")>  _
	Public Property COL_id_colaborador() As Integer
		Get
			Return Me._COL_id_colaborador
		End Get
		Set
			If ((Me._COL_id_colaborador = value)  _
						= false) Then
				If Me._COLABORADOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCOL_id_colaboradorChanging(value)
				Me.SendPropertyChanging
				Me._COL_id_colaborador = value
				Me.SendPropertyChanged("COL_id_colaborador")
				Me.OnCOL_id_colaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="Int")>  _
	Public Property ORT_id_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (Me._ORT_id_orden_trabajo.Equals(value) = false) Then
				If Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_hora_fin", DbType:="VarChar(10)")>  _
	Public Property TAR_hora_fin() As String
		Get
			Return Me._TAR_hora_fin
		End Get
		Set
			If (String.Equals(Me._TAR_hora_fin, value) = false) Then
				Me.OnTAR_hora_finChanging(value)
				Me.SendPropertyChanging
				Me._TAR_hora_fin = value
				Me.SendPropertyChanged("TAR_hora_fin")
				Me.OnTAR_hora_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_carga_horaria", DbType:="VarChar(10)")>  _
	Public Property TAR_carga_horaria() As String
		Get
			Return Me._TAR_carga_horaria
		End Get
		Set
			If (String.Equals(Me._TAR_carga_horaria, value) = false) Then
				Me.OnTAR_carga_horariaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_carga_horaria = value
				Me.SendPropertyChanged("TAR_carga_horaria")
				Me.OnTAR_carga_horariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_detalle_tarea", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property TAR_detalle_tarea() As String
		Get
			Return Me._TAR_detalle_tarea
		End Get
		Set
			If (String.Equals(Me._TAR_detalle_tarea, value) = false) Then
				Me.OnTAR_detalle_tareaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_detalle_tarea = value
				Me.SendPropertyChanged("TAR_detalle_tarea")
				Me.OnTAR_detalle_tareaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_observaciones", DbType:="VarChar(200)")>  _
	Public Property TAR_observaciones() As String
		Get
			Return Me._TAR_observaciones
		End Get
		Set
			If (String.Equals(Me._TAR_observaciones, value) = false) Then
				Me.OnTAR_observacionesChanging(value)
				Me.SendPropertyChanging
				Me._TAR_observaciones = value
				Me.SendPropertyChanged("TAR_observaciones")
				Me.OnTAR_observacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_fecha", DbType:="Date")>  _
	Public Property TAR_fecha() As System.Nullable(Of Date)
		Get
			Return Me._TAR_fecha
		End Get
		Set
			If (Me._TAR_fecha.Equals(value) = false) Then
				Me.OnTAR_fechaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_fecha = value
				Me.SendPropertyChanged("TAR_fecha")
				Me.OnTAR_fechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_entrada", DbType:="VarChar(10)")>  _
	Public Property TAR_entrada() As String
		Get
			Return Me._TAR_entrada
		End Get
		Set
			If (String.Equals(Me._TAR_entrada, value) = false) Then
				Me.OnTAR_entradaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_entrada = value
				Me.SendPropertyChanged("TAR_entrada")
				Me.OnTAR_entradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_salida", DbType:="VarChar(10)")>  _
	Public Property TAR_salida() As String
		Get
			Return Me._TAR_salida
		End Get
		Set
			If (String.Equals(Me._TAR_salida, value) = false) Then
				Me.OnTAR_salidaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_salida = value
				Me.SendPropertyChanged("TAR_salida")
				Me.OnTAR_salidaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_TAREA", Storage:="_COLABORADOR", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador", IsForeignKey:=true)>  _
	Public Property COLABORADOR() As COLABORADOR
		Get
			Return Me._COLABORADOR.Entity
		End Get
		Set
			Dim previousValue As COLABORADOR = Me._COLABORADOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._COLABORADOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._COLABORADOR.Entity = Nothing
					previousValue.TAREA.Remove(Me)
				End If
				Me._COLABORADOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TAREA.Add(Me)
					Me._COL_id_colaborador = value.COL_id_colaborador
				Else
					Me._COL_id_colaborador = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("COLABORADOR")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_TAREA", Storage:="_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property ORDEN_TRABAJO() As ORDEN_TRABAJO
		Get
			Return Me._ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As ORDEN_TRABAJO = Me._ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ORDEN_TRABAJO.Entity = Nothing
					previousValue.TAREA.Remove(Me)
				End If
				Me._ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TAREA.Add(Me)
					Me._ORT_id_orden_trabajo = value.ORT_id_orden_trabajo
				Else
					Me._ORT_id_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.USUARIO")>  _
Partial Public Class USUARIO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _USU_id_usuario As Integer
	
	Private _USU_usuario As String
	
	Private _USU_contraseña As String
	
	Private _USU_perfil As String
	
	Private _COL_id_colaborador As System.Nullable(Of Integer)
	
	Private _TICKET As EntitySet(Of TICKET)
	
	Private _MENSAJE As EntitySet(Of MENSAJE)
	
	Private _COLABORADOR As EntityRef(Of COLABORADOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanged()
    End Sub
    Partial Private Sub OnUSU_usuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUSU_usuarioChanged()
    End Sub
    Partial Private Sub OnUSU_contraseñaChanging(value As String)
    End Sub
    Partial Private Sub OnUSU_contraseñaChanged()
    End Sub
    Partial Private Sub OnUSU_perfilChanging(value As String)
    End Sub
    Partial Private Sub OnUSU_perfilChanged()
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TICKET = New EntitySet(Of TICKET)(AddressOf Me.attach_TICKET, AddressOf Me.detach_TICKET)
		Me._MENSAJE = New EntitySet(Of MENSAJE)(AddressOf Me.attach_MENSAJE, AddressOf Me.detach_MENSAJE)
		Me._COLABORADOR = CType(Nothing, EntityRef(Of COLABORADOR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_id_usuario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property USU_id_usuario() As Integer
		Get
			Return Me._USU_id_usuario
		End Get
		Set
			If ((Me._USU_id_usuario = value)  _
						= false) Then
				Me.OnUSU_id_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._USU_id_usuario = value
				Me.SendPropertyChanged("USU_id_usuario")
				Me.OnUSU_id_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_usuario", DbType:="VarChar(50)")>  _
	Public Property USU_usuario() As String
		Get
			Return Me._USU_usuario
		End Get
		Set
			If (String.Equals(Me._USU_usuario, value) = false) Then
				Me.OnUSU_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._USU_usuario = value
				Me.SendPropertyChanged("USU_usuario")
				Me.OnUSU_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_contraseña", DbType:="VarChar(50)")>  _
	Public Property USU_contraseña() As String
		Get
			Return Me._USU_contraseña
		End Get
		Set
			If (String.Equals(Me._USU_contraseña, value) = false) Then
				Me.OnUSU_contraseñaChanging(value)
				Me.SendPropertyChanging
				Me._USU_contraseña = value
				Me.SendPropertyChanged("USU_contraseña")
				Me.OnUSU_contraseñaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_perfil", DbType:="VarChar(15)")>  _
	Public Property USU_perfil() As String
		Get
			Return Me._USU_perfil
		End Get
		Set
			If (String.Equals(Me._USU_perfil, value) = false) Then
				Me.OnUSU_perfilChanging(value)
				Me.SendPropertyChanging
				Me._USU_perfil = value
				Me.SendPropertyChanged("USU_perfil")
				Me.OnUSU_perfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_id_colaborador", DbType:="Int")>  _
	Public Property COL_id_colaborador() As System.Nullable(Of Integer)
		Get
			Return Me._COL_id_colaborador
		End Get
		Set
			If (Me._COL_id_colaborador.Equals(value) = false) Then
				If Me._COLABORADOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCOL_id_colaboradorChanging(value)
				Me.SendPropertyChanging
				Me._COL_id_colaborador = value
				Me.SendPropertyChanged("COL_id_colaborador")
				Me.OnCOL_id_colaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="USUARIO_TICKET", Storage:="_TICKET", ThisKey:="USU_id_usuario", OtherKey:="TIC_id_usuario")>  _
	Public Property TICKET() As EntitySet(Of TICKET)
		Get
			Return Me._TICKET
		End Get
		Set
			Me._TICKET.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="USUARIO_MENSAJE", Storage:="_MENSAJE", ThisKey:="USU_id_usuario", OtherKey:="USU_id_usuario")>  _
	Public Property MENSAJE() As EntitySet(Of MENSAJE)
		Get
			Return Me._MENSAJE
		End Get
		Set
			Me._MENSAJE.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_USUARIO", Storage:="_COLABORADOR", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador", IsForeignKey:=true)>  _
	Public Property COLABORADOR() As COLABORADOR
		Get
			Return Me._COLABORADOR.Entity
		End Get
		Set
			Dim previousValue As COLABORADOR = Me._COLABORADOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._COLABORADOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._COLABORADOR.Entity = Nothing
					previousValue.USUARIO.Remove(Me)
				End If
				Me._COLABORADOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.USUARIO.Add(Me)
					Me._COL_id_colaborador = value.COL_id_colaborador
				Else
					Me._COL_id_colaborador = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("COLABORADOR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TICKET(ByVal entity As TICKET)
		Me.SendPropertyChanging
		entity.USUARIO = Me
	End Sub
	
	Private Sub detach_TICKET(ByVal entity As TICKET)
		Me.SendPropertyChanging
		entity.USUARIO = Nothing
	End Sub
	
	Private Sub attach_MENSAJE(ByVal entity As MENSAJE)
		Me.SendPropertyChanging
		entity.USUARIO = Me
	End Sub
	
	Private Sub detach_MENSAJE(ByVal entity As MENSAJE)
		Me.SendPropertyChanging
		entity.USUARIO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[RE-TRABAJO]")>  _
Partial Public Class RE_TRABAJO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RET_id_retrabajo As Integer
	
	Private _RET_cantidad_producto_retrabajo As System.Nullable(Of Integer)
	
	Private _RET_tamaño_producto_retrabajo As String
	
	Private _RET_tipo_impresion_retrabajo As String
	
	Private _RET_papel_soporte_1_retrabajo As String
	
	Private _RET_papel_soporte_2_retrabajo As String
	
	Private _RET_papel_soporte_3_retrabajo As String
	
	Private _RET_gramaje_soporte_1_retrabajo As String
	
	Private _RET_gramaje_soporte_2_retrabajo As String
	
	Private _RET_gramaje_soporte_3_retrabajo As String
	
	Private _RET_cantidad_soporte_1_retrabajo As System.Nullable(Of Integer)
	
	Private _RET_cantidad_soporte_2_retrabajo As System.Nullable(Of Integer)
	
	Private _RET_cantidad_soporte_3_retrabajo As System.Nullable(Of Integer)
	
	Private _RET_formato_soporte_1_retrabajo As String
	
	Private _RET_formato_soporte_2_retrabajo As String
	
	Private _RET_formato_soporte_3_retrabajo As String
	
	Private _cantidad_1_PM_offset_retrabajo As System.Nullable(Of Integer)
	
	Private _cantidad_2_PM_offset_retrabajo As System.Nullable(Of Integer)
	
	Private _cantidad_3_PM_offset_retrabajo As System.Nullable(Of Integer)
	
	Private _RET_fecha_entrega_retrabajo As System.Nullable(Of Date)
	
	Private _RET_impresora_offset As String
	
	Private _id_detalle_orden_trabajo As System.Nullable(Of Integer)
	
	Private _RET_origen_area_motivo As String
	
	Private _RET_procedimiento_observaciones As String
	
	Private _RET_fecha_comienzo_retrabajo As System.Nullable(Of Date)
	
	Private _formato_1_PM_offset_retrabajo As String
	
	Private _formato_2_PM_offset_retrabajo As String
	
	Private _formato_3_PM_offset_retrabajo As String
	
	Private _modo_impresion_offset_retrabajo As String
	
	Private _tipo_impresion_offset_retrabajo As String
	
	Private _cantidad_chapas_retrabajo As System.Nullable(Of Integer)
	
	Private _impresora_offset_retrabajo As String
	
	Private _marca_offset_retrabajo As String
	
	Private _cantidad_1_PM_digital_retrabajo As System.Nullable(Of Integer)
	
	Private _cantidad_2_PM_digital_retrabajo As System.Nullable(Of Integer)
	
	Private _cantidad_3_PM_digital_retrabajo As System.Nullable(Of Integer)
	
	Private _formato_1_PM_digital_retrabajo As String
	
	Private _formato_2_PM_digital_retrabajo As String
	
	Private _formato_3_PM_digital_retrabajo As String
	
	Private _modo_impresion_digital_retrabajo As String
	
	Private _tipo_impresion_digital_retrabajo As String
	
	Private _dato_variable_retrabajo As String
	
	Private _cantidad_gran_formato_retrabajo As System.Nullable(Of Integer)
	
	Private _tamaño_gran_formato_retrabajo As String
	
	Private _sustrato_gran_formato_retrabajo As String
	
	Private _calidad_gran_formato_retrabajo As String
	
	Private _sistema_gran_formato_retrabajo As String
	
	Private _tipo_terminacion_retrabajo As String
	
	Private _descripcion_terminacion_retrabajo As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntityRef(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRET_id_retrabajoChanging(value As Integer)
    End Sub
    Partial Private Sub OnRET_id_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_cantidad_producto_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_producto_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_tamaño_producto_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_tamaño_producto_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_tipo_impresion_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_tipo_impresion_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_papel_soporte_1_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_papel_soporte_1_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_papel_soporte_2_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_papel_soporte_2_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_papel_soporte_3_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_papel_soporte_3_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_1_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_1_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_2_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_2_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_3_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_3_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_1_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_1_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_2_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_2_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_3_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_3_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_formato_soporte_1_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_formato_soporte_1_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_formato_soporte_2_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_formato_soporte_2_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_formato_soporte_3_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_formato_soporte_3_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_1_PM_offset_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_1_PM_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_2_PM_offset_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_2_PM_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_3_PM_offset_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_3_PM_offset_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_fecha_entrega_retrabajoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRET_fecha_entrega_retrabajoChanged()
    End Sub
    Partial Private Sub OnRET_impresora_offsetChanging(value As String)
    End Sub
    Partial Private Sub OnRET_impresora_offsetChanged()
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnRET_origen_area_motivoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_origen_area_motivoChanged()
    End Sub
    Partial Private Sub OnRET_procedimiento_observacionesChanging(value As String)
    End Sub
    Partial Private Sub OnRET_procedimiento_observacionesChanged()
    End Sub
    Partial Private Sub OnRET_fecha_comienzo_retrabajoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRET_fecha_comienzo_retrabajoChanged()
    End Sub
    Partial Private Sub Onformato_1_PM_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onformato_1_PM_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Onformato_2_PM_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onformato_2_PM_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Onformato_3_PM_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onformato_3_PM_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Onmodo_impresion_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onmodo_impresion_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Ontipo_impresion_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_impresion_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_chapas_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_chapas_retrabajoChanged()
    End Sub
    Partial Private Sub Onimpresora_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onimpresora_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Onmarca_offset_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onmarca_offset_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_1_PM_digital_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_1_PM_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_2_PM_digital_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_2_PM_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_3_PM_digital_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_3_PM_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Onformato_1_PM_digital_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onformato_1_PM_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Onformato_2_PM_digital_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onformato_2_PM_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Onformato_3_PM_digital_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onformato_3_PM_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Onmodo_impresion_digital_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onmodo_impresion_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Ontipo_impresion_digital_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_impresion_digital_retrabajoChanged()
    End Sub
    Partial Private Sub Ondato_variable_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Ondato_variable_retrabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_gran_formato_retrabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_gran_formato_retrabajoChanged()
    End Sub
    Partial Private Sub Ontamaño_gran_formato_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Ontamaño_gran_formato_retrabajoChanged()
    End Sub
    Partial Private Sub Onsustrato_gran_formato_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onsustrato_gran_formato_retrabajoChanged()
    End Sub
    Partial Private Sub Oncalidad_gran_formato_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Oncalidad_gran_formato_retrabajoChanged()
    End Sub
    Partial Private Sub Onsistema_gran_formato_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Onsistema_gran_formato_retrabajoChanged()
    End Sub
    Partial Private Sub Ontipo_terminacion_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_terminacion_retrabajoChanged()
    End Sub
    Partial Private Sub Ondescripcion_terminacion_retrabajoChanging(value As String)
    End Sub
    Partial Private Sub Ondescripcion_terminacion_retrabajoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = CType(Nothing, EntityRef(Of DETALLE_ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_id_retrabajo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RET_id_retrabajo() As Integer
		Get
			Return Me._RET_id_retrabajo
		End Get
		Set
			If ((Me._RET_id_retrabajo = value)  _
						= false) Then
				Me.OnRET_id_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_id_retrabajo = value
				Me.SendPropertyChanged("RET_id_retrabajo")
				Me.OnRET_id_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_producto_retrabajo", DbType:="Int")>  _
	Public Property RET_cantidad_producto_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_producto_retrabajo
		End Get
		Set
			If (Me._RET_cantidad_producto_retrabajo.Equals(value) = false) Then
				If Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRET_cantidad_producto_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_producto_retrabajo = value
				Me.SendPropertyChanged("RET_cantidad_producto_retrabajo")
				Me.OnRET_cantidad_producto_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_tamaño_producto_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_tamaño_producto_retrabajo() As String
		Get
			Return Me._RET_tamaño_producto_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_tamaño_producto_retrabajo, value) = false) Then
				Me.OnRET_tamaño_producto_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_tamaño_producto_retrabajo = value
				Me.SendPropertyChanged("RET_tamaño_producto_retrabajo")
				Me.OnRET_tamaño_producto_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_tipo_impresion_retrabajo", DbType:="VarChar(4)")>  _
	Public Property RET_tipo_impresion_retrabajo() As String
		Get
			Return Me._RET_tipo_impresion_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_tipo_impresion_retrabajo, value) = false) Then
				Me.OnRET_tipo_impresion_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_tipo_impresion_retrabajo = value
				Me.SendPropertyChanged("RET_tipo_impresion_retrabajo")
				Me.OnRET_tipo_impresion_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_papel_soporte_1_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_papel_soporte_1_retrabajo() As String
		Get
			Return Me._RET_papel_soporte_1_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_papel_soporte_1_retrabajo, value) = false) Then
				Me.OnRET_papel_soporte_1_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_papel_soporte_1_retrabajo = value
				Me.SendPropertyChanged("RET_papel_soporte_1_retrabajo")
				Me.OnRET_papel_soporte_1_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_papel_soporte_2_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_papel_soporte_2_retrabajo() As String
		Get
			Return Me._RET_papel_soporte_2_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_papel_soporte_2_retrabajo, value) = false) Then
				Me.OnRET_papel_soporte_2_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_papel_soporte_2_retrabajo = value
				Me.SendPropertyChanged("RET_papel_soporte_2_retrabajo")
				Me.OnRET_papel_soporte_2_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_papel_soporte_3_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_papel_soporte_3_retrabajo() As String
		Get
			Return Me._RET_papel_soporte_3_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_papel_soporte_3_retrabajo, value) = false) Then
				Me.OnRET_papel_soporte_3_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_papel_soporte_3_retrabajo = value
				Me.SendPropertyChanged("RET_papel_soporte_3_retrabajo")
				Me.OnRET_papel_soporte_3_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_gramaje_soporte_1_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_gramaje_soporte_1_retrabajo() As String
		Get
			Return Me._RET_gramaje_soporte_1_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_gramaje_soporte_1_retrabajo, value) = false) Then
				Me.OnRET_gramaje_soporte_1_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_gramaje_soporte_1_retrabajo = value
				Me.SendPropertyChanged("RET_gramaje_soporte_1_retrabajo")
				Me.OnRET_gramaje_soporte_1_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_gramaje_soporte_2_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_gramaje_soporte_2_retrabajo() As String
		Get
			Return Me._RET_gramaje_soporte_2_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_gramaje_soporte_2_retrabajo, value) = false) Then
				Me.OnRET_gramaje_soporte_2_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_gramaje_soporte_2_retrabajo = value
				Me.SendPropertyChanged("RET_gramaje_soporte_2_retrabajo")
				Me.OnRET_gramaje_soporte_2_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_gramaje_soporte_3_retrabajo", DbType:="VarChar(50)")>  _
	Public Property RET_gramaje_soporte_3_retrabajo() As String
		Get
			Return Me._RET_gramaje_soporte_3_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_gramaje_soporte_3_retrabajo, value) = false) Then
				Me.OnRET_gramaje_soporte_3_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_gramaje_soporte_3_retrabajo = value
				Me.SendPropertyChanged("RET_gramaje_soporte_3_retrabajo")
				Me.OnRET_gramaje_soporte_3_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_soporte_1_retrabajo", DbType:="Int")>  _
	Public Property RET_cantidad_soporte_1_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_soporte_1_retrabajo
		End Get
		Set
			If (Me._RET_cantidad_soporte_1_retrabajo.Equals(value) = false) Then
				Me.OnRET_cantidad_soporte_1_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_soporte_1_retrabajo = value
				Me.SendPropertyChanged("RET_cantidad_soporte_1_retrabajo")
				Me.OnRET_cantidad_soporte_1_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_soporte_2_retrabajo", DbType:="Int")>  _
	Public Property RET_cantidad_soporte_2_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_soporte_2_retrabajo
		End Get
		Set
			If (Me._RET_cantidad_soporte_2_retrabajo.Equals(value) = false) Then
				Me.OnRET_cantidad_soporte_2_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_soporte_2_retrabajo = value
				Me.SendPropertyChanged("RET_cantidad_soporte_2_retrabajo")
				Me.OnRET_cantidad_soporte_2_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_soporte_3_retrabajo", DbType:="Int")>  _
	Public Property RET_cantidad_soporte_3_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_soporte_3_retrabajo
		End Get
		Set
			If (Me._RET_cantidad_soporte_3_retrabajo.Equals(value) = false) Then
				Me.OnRET_cantidad_soporte_3_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_soporte_3_retrabajo = value
				Me.SendPropertyChanged("RET_cantidad_soporte_3_retrabajo")
				Me.OnRET_cantidad_soporte_3_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_formato_soporte_1_retrabajo", DbType:="VarChar(15)")>  _
	Public Property RET_formato_soporte_1_retrabajo() As String
		Get
			Return Me._RET_formato_soporte_1_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_formato_soporte_1_retrabajo, value) = false) Then
				Me.OnRET_formato_soporte_1_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_formato_soporte_1_retrabajo = value
				Me.SendPropertyChanged("RET_formato_soporte_1_retrabajo")
				Me.OnRET_formato_soporte_1_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_formato_soporte_2_retrabajo", DbType:="VarChar(15)")>  _
	Public Property RET_formato_soporte_2_retrabajo() As String
		Get
			Return Me._RET_formato_soporte_2_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_formato_soporte_2_retrabajo, value) = false) Then
				Me.OnRET_formato_soporte_2_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_formato_soporte_2_retrabajo = value
				Me.SendPropertyChanged("RET_formato_soporte_2_retrabajo")
				Me.OnRET_formato_soporte_2_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_formato_soporte_3_retrabajo", DbType:="VarChar(15)")>  _
	Public Property RET_formato_soporte_3_retrabajo() As String
		Get
			Return Me._RET_formato_soporte_3_retrabajo
		End Get
		Set
			If (String.Equals(Me._RET_formato_soporte_3_retrabajo, value) = false) Then
				Me.OnRET_formato_soporte_3_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_formato_soporte_3_retrabajo = value
				Me.SendPropertyChanged("RET_formato_soporte_3_retrabajo")
				Me.OnRET_formato_soporte_3_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_1_PM_offset_retrabajo", DbType:="Int")>  _
	Public Property cantidad_1_PM_offset_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_1_PM_offset_retrabajo
		End Get
		Set
			If (Me._cantidad_1_PM_offset_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_1_PM_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_1_PM_offset_retrabajo = value
				Me.SendPropertyChanged("cantidad_1_PM_offset_retrabajo")
				Me.Oncantidad_1_PM_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_2_PM_offset_retrabajo", DbType:="Int")>  _
	Public Property cantidad_2_PM_offset_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_2_PM_offset_retrabajo
		End Get
		Set
			If (Me._cantidad_2_PM_offset_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_2_PM_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_2_PM_offset_retrabajo = value
				Me.SendPropertyChanged("cantidad_2_PM_offset_retrabajo")
				Me.Oncantidad_2_PM_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_3_PM_offset_retrabajo", DbType:="Int")>  _
	Public Property cantidad_3_PM_offset_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_3_PM_offset_retrabajo
		End Get
		Set
			If (Me._cantidad_3_PM_offset_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_3_PM_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_3_PM_offset_retrabajo = value
				Me.SendPropertyChanged("cantidad_3_PM_offset_retrabajo")
				Me.Oncantidad_3_PM_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_fecha_entrega_retrabajo", DbType:="Date")>  _
	Public Property RET_fecha_entrega_retrabajo() As System.Nullable(Of Date)
		Get
			Return Me._RET_fecha_entrega_retrabajo
		End Get
		Set
			If (Me._RET_fecha_entrega_retrabajo.Equals(value) = false) Then
				Me.OnRET_fecha_entrega_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_fecha_entrega_retrabajo = value
				Me.SendPropertyChanged("RET_fecha_entrega_retrabajo")
				Me.OnRET_fecha_entrega_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_impresora_offset", DbType:="VarChar(15)")>  _
	Public Property RET_impresora_offset() As String
		Get
			Return Me._RET_impresora_offset
		End Get
		Set
			If (String.Equals(Me._RET_impresora_offset, value) = false) Then
				Me.OnRET_impresora_offsetChanging(value)
				Me.SendPropertyChanging
				Me._RET_impresora_offset = value
				Me.SendPropertyChanged("RET_impresora_offset")
				Me.OnRET_impresora_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_detalle_orden_trabajo", DbType:="Int")>  _
	Public Property id_detalle_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._id_detalle_orden_trabajo
		End Get
		Set
			If (Me._id_detalle_orden_trabajo.Equals(value) = false) Then
				Me.Onid_detalle_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._id_detalle_orden_trabajo = value
				Me.SendPropertyChanged("id_detalle_orden_trabajo")
				Me.Onid_detalle_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_origen_area_motivo", DbType:="VarChar(100)")>  _
	Public Property RET_origen_area_motivo() As String
		Get
			Return Me._RET_origen_area_motivo
		End Get
		Set
			If (String.Equals(Me._RET_origen_area_motivo, value) = false) Then
				Me.OnRET_origen_area_motivoChanging(value)
				Me.SendPropertyChanging
				Me._RET_origen_area_motivo = value
				Me.SendPropertyChanged("RET_origen_area_motivo")
				Me.OnRET_origen_area_motivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_procedimiento_observaciones", DbType:="VarChar(350)")>  _
	Public Property RET_procedimiento_observaciones() As String
		Get
			Return Me._RET_procedimiento_observaciones
		End Get
		Set
			If (String.Equals(Me._RET_procedimiento_observaciones, value) = false) Then
				Me.OnRET_procedimiento_observacionesChanging(value)
				Me.SendPropertyChanging
				Me._RET_procedimiento_observaciones = value
				Me.SendPropertyChanged("RET_procedimiento_observaciones")
				Me.OnRET_procedimiento_observacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_fecha_comienzo_retrabajo", DbType:="Date")>  _
	Public Property RET_fecha_comienzo_retrabajo() As System.Nullable(Of Date)
		Get
			Return Me._RET_fecha_comienzo_retrabajo
		End Get
		Set
			If (Me._RET_fecha_comienzo_retrabajo.Equals(value) = false) Then
				Me.OnRET_fecha_comienzo_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_fecha_comienzo_retrabajo = value
				Me.SendPropertyChanged("RET_fecha_comienzo_retrabajo")
				Me.OnRET_fecha_comienzo_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_1_PM_offset_retrabajo", DbType:="VarChar(15)")>  _
	Public Property formato_1_PM_offset_retrabajo() As String
		Get
			Return Me._formato_1_PM_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._formato_1_PM_offset_retrabajo, value) = false) Then
				Me.Onformato_1_PM_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._formato_1_PM_offset_retrabajo = value
				Me.SendPropertyChanged("formato_1_PM_offset_retrabajo")
				Me.Onformato_1_PM_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_2_PM_offset_retrabajo", DbType:="VarChar(15)")>  _
	Public Property formato_2_PM_offset_retrabajo() As String
		Get
			Return Me._formato_2_PM_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._formato_2_PM_offset_retrabajo, value) = false) Then
				Me.Onformato_2_PM_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._formato_2_PM_offset_retrabajo = value
				Me.SendPropertyChanged("formato_2_PM_offset_retrabajo")
				Me.Onformato_2_PM_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_3_PM_offset_retrabajo", DbType:="VarChar(15)")>  _
	Public Property formato_3_PM_offset_retrabajo() As String
		Get
			Return Me._formato_3_PM_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._formato_3_PM_offset_retrabajo, value) = false) Then
				Me.Onformato_3_PM_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._formato_3_PM_offset_retrabajo = value
				Me.SendPropertyChanged("formato_3_PM_offset_retrabajo")
				Me.Onformato_3_PM_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modo_impresion_offset_retrabajo", DbType:="VarChar(25)")>  _
	Public Property modo_impresion_offset_retrabajo() As String
		Get
			Return Me._modo_impresion_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._modo_impresion_offset_retrabajo, value) = false) Then
				Me.Onmodo_impresion_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._modo_impresion_offset_retrabajo = value
				Me.SendPropertyChanged("modo_impresion_offset_retrabajo")
				Me.Onmodo_impresion_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_impresion_offset_retrabajo", DbType:="VarChar(15)")>  _
	Public Property tipo_impresion_offset_retrabajo() As String
		Get
			Return Me._tipo_impresion_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._tipo_impresion_offset_retrabajo, value) = false) Then
				Me.Ontipo_impresion_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._tipo_impresion_offset_retrabajo = value
				Me.SendPropertyChanged("tipo_impresion_offset_retrabajo")
				Me.Ontipo_impresion_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_chapas_retrabajo", DbType:="Int")>  _
	Public Property cantidad_chapas_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_chapas_retrabajo
		End Get
		Set
			If (Me._cantidad_chapas_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_chapas_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_chapas_retrabajo = value
				Me.SendPropertyChanged("cantidad_chapas_retrabajo")
				Me.Oncantidad_chapas_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_impresora_offset_retrabajo", DbType:="VarChar(15)")>  _
	Public Property impresora_offset_retrabajo() As String
		Get
			Return Me._impresora_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._impresora_offset_retrabajo, value) = false) Then
				Me.Onimpresora_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._impresora_offset_retrabajo = value
				Me.SendPropertyChanged("impresora_offset_retrabajo")
				Me.Onimpresora_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_marca_offset_retrabajo", DbType:="VarChar(15)")>  _
	Public Property marca_offset_retrabajo() As String
		Get
			Return Me._marca_offset_retrabajo
		End Get
		Set
			If (String.Equals(Me._marca_offset_retrabajo, value) = false) Then
				Me.Onmarca_offset_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._marca_offset_retrabajo = value
				Me.SendPropertyChanged("marca_offset_retrabajo")
				Me.Onmarca_offset_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_1_PM_digital_retrabajo", DbType:="Int")>  _
	Public Property cantidad_1_PM_digital_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_1_PM_digital_retrabajo
		End Get
		Set
			If (Me._cantidad_1_PM_digital_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_1_PM_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_1_PM_digital_retrabajo = value
				Me.SendPropertyChanged("cantidad_1_PM_digital_retrabajo")
				Me.Oncantidad_1_PM_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_2_PM_digital_retrabajo", DbType:="Int")>  _
	Public Property cantidad_2_PM_digital_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_2_PM_digital_retrabajo
		End Get
		Set
			If (Me._cantidad_2_PM_digital_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_2_PM_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_2_PM_digital_retrabajo = value
				Me.SendPropertyChanged("cantidad_2_PM_digital_retrabajo")
				Me.Oncantidad_2_PM_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_3_PM_digital_retrabajo", DbType:="Int")>  _
	Public Property cantidad_3_PM_digital_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_3_PM_digital_retrabajo
		End Get
		Set
			If (Me._cantidad_3_PM_digital_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_3_PM_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_3_PM_digital_retrabajo = value
				Me.SendPropertyChanged("cantidad_3_PM_digital_retrabajo")
				Me.Oncantidad_3_PM_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_1_PM_digital_retrabajo", DbType:="VarChar(15)")>  _
	Public Property formato_1_PM_digital_retrabajo() As String
		Get
			Return Me._formato_1_PM_digital_retrabajo
		End Get
		Set
			If (String.Equals(Me._formato_1_PM_digital_retrabajo, value) = false) Then
				Me.Onformato_1_PM_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._formato_1_PM_digital_retrabajo = value
				Me.SendPropertyChanged("formato_1_PM_digital_retrabajo")
				Me.Onformato_1_PM_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_2_PM_digital_retrabajo", DbType:="VarChar(15)")>  _
	Public Property formato_2_PM_digital_retrabajo() As String
		Get
			Return Me._formato_2_PM_digital_retrabajo
		End Get
		Set
			If (String.Equals(Me._formato_2_PM_digital_retrabajo, value) = false) Then
				Me.Onformato_2_PM_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._formato_2_PM_digital_retrabajo = value
				Me.SendPropertyChanged("formato_2_PM_digital_retrabajo")
				Me.Onformato_2_PM_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_3_PM_digital_retrabajo", DbType:="VarChar(15)")>  _
	Public Property formato_3_PM_digital_retrabajo() As String
		Get
			Return Me._formato_3_PM_digital_retrabajo
		End Get
		Set
			If (String.Equals(Me._formato_3_PM_digital_retrabajo, value) = false) Then
				Me.Onformato_3_PM_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._formato_3_PM_digital_retrabajo = value
				Me.SendPropertyChanged("formato_3_PM_digital_retrabajo")
				Me.Onformato_3_PM_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modo_impresion_digital_retrabajo", DbType:="VarChar(15)")>  _
	Public Property modo_impresion_digital_retrabajo() As String
		Get
			Return Me._modo_impresion_digital_retrabajo
		End Get
		Set
			If (String.Equals(Me._modo_impresion_digital_retrabajo, value) = false) Then
				Me.Onmodo_impresion_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._modo_impresion_digital_retrabajo = value
				Me.SendPropertyChanged("modo_impresion_digital_retrabajo")
				Me.Onmodo_impresion_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_impresion_digital_retrabajo", DbType:="VarChar(15)")>  _
	Public Property tipo_impresion_digital_retrabajo() As String
		Get
			Return Me._tipo_impresion_digital_retrabajo
		End Get
		Set
			If (String.Equals(Me._tipo_impresion_digital_retrabajo, value) = false) Then
				Me.Ontipo_impresion_digital_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._tipo_impresion_digital_retrabajo = value
				Me.SendPropertyChanged("tipo_impresion_digital_retrabajo")
				Me.Ontipo_impresion_digital_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dato_variable_retrabajo", DbType:="VarChar(350)")>  _
	Public Property dato_variable_retrabajo() As String
		Get
			Return Me._dato_variable_retrabajo
		End Get
		Set
			If (String.Equals(Me._dato_variable_retrabajo, value) = false) Then
				Me.Ondato_variable_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._dato_variable_retrabajo = value
				Me.SendPropertyChanged("dato_variable_retrabajo")
				Me.Ondato_variable_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_gran_formato_retrabajo", DbType:="Int")>  _
	Public Property cantidad_gran_formato_retrabajo() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_gran_formato_retrabajo
		End Get
		Set
			If (Me._cantidad_gran_formato_retrabajo.Equals(value) = false) Then
				Me.Oncantidad_gran_formato_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_gran_formato_retrabajo = value
				Me.SendPropertyChanged("cantidad_gran_formato_retrabajo")
				Me.Oncantidad_gran_formato_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tamaño_gran_formato_retrabajo", DbType:="VarChar(15)")>  _
	Public Property tamaño_gran_formato_retrabajo() As String
		Get
			Return Me._tamaño_gran_formato_retrabajo
		End Get
		Set
			If (String.Equals(Me._tamaño_gran_formato_retrabajo, value) = false) Then
				Me.Ontamaño_gran_formato_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._tamaño_gran_formato_retrabajo = value
				Me.SendPropertyChanged("tamaño_gran_formato_retrabajo")
				Me.Ontamaño_gran_formato_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sustrato_gran_formato_retrabajo", DbType:="VarChar(25)")>  _
	Public Property sustrato_gran_formato_retrabajo() As String
		Get
			Return Me._sustrato_gran_formato_retrabajo
		End Get
		Set
			If (String.Equals(Me._sustrato_gran_formato_retrabajo, value) = false) Then
				Me.Onsustrato_gran_formato_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._sustrato_gran_formato_retrabajo = value
				Me.SendPropertyChanged("sustrato_gran_formato_retrabajo")
				Me.Onsustrato_gran_formato_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_calidad_gran_formato_retrabajo", DbType:="VarChar(25)")>  _
	Public Property calidad_gran_formato_retrabajo() As String
		Get
			Return Me._calidad_gran_formato_retrabajo
		End Get
		Set
			If (String.Equals(Me._calidad_gran_formato_retrabajo, value) = false) Then
				Me.Oncalidad_gran_formato_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._calidad_gran_formato_retrabajo = value
				Me.SendPropertyChanged("calidad_gran_formato_retrabajo")
				Me.Oncalidad_gran_formato_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sistema_gran_formato_retrabajo", DbType:="VarChar(25)")>  _
	Public Property sistema_gran_formato_retrabajo() As String
		Get
			Return Me._sistema_gran_formato_retrabajo
		End Get
		Set
			If (String.Equals(Me._sistema_gran_formato_retrabajo, value) = false) Then
				Me.Onsistema_gran_formato_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._sistema_gran_formato_retrabajo = value
				Me.SendPropertyChanged("sistema_gran_formato_retrabajo")
				Me.Onsistema_gran_formato_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_terminacion_retrabajo", DbType:="VarChar(120)")>  _
	Public Property tipo_terminacion_retrabajo() As String
		Get
			Return Me._tipo_terminacion_retrabajo
		End Get
		Set
			If (String.Equals(Me._tipo_terminacion_retrabajo, value) = false) Then
				Me.Ontipo_terminacion_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._tipo_terminacion_retrabajo = value
				Me.SendPropertyChanged("tipo_terminacion_retrabajo")
				Me.Ontipo_terminacion_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion_terminacion_retrabajo", DbType:="VarChar(350)")>  _
	Public Property descripcion_terminacion_retrabajo() As String
		Get
			Return Me._descripcion_terminacion_retrabajo
		End Get
		Set
			If (String.Equals(Me._descripcion_terminacion_retrabajo, value) = false) Then
				Me.Ondescripcion_terminacion_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._descripcion_terminacion_retrabajo = value
				Me.SendPropertyChanged("descripcion_terminacion_retrabajo")
				Me.Ondescripcion_terminacion_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_RE_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="RET_cantidad_producto_retrabajo", OtherKey:="id_detalle_orden_trabajo", IsForeignKey:=true)>  _
	Public Property DETALLE_ORDEN_TRABAJO() As DETALLE_ORDEN_TRABAJO
		Get
			Return Me._DETALLE_ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As DETALLE_ORDEN_TRABAJO = Me._DETALLE_ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._DETALLE_ORDEN_TRABAJO.Entity = Nothing
					previousValue.RE_TRABAJO.Remove(Me)
				End If
				Me._DETALLE_ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RE_TRABAJO.Add(Me)
					Me._RET_cantidad_producto_retrabajo = value.id_detalle_orden_trabajo
				Else
					Me._RET_cantidad_producto_retrabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("DETALLE_ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PIEZA")>  _
Partial Public Class PIEZA1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PIE_id_pieza As Integer
	
	Private _PIE_nombre_pie As String
	
	Private _PIE_ubicacion As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntitySet(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPIE_id_piezaChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIE_id_piezaChanged()
    End Sub
    Partial Private Sub OnPIE_nombre_pieChanging(value As String)
    End Sub
    Partial Private Sub OnPIE_nombre_pieChanged()
    End Sub
    Partial Private Sub OnPIE_ubicacionChanging(value As String)
    End Sub
    Partial Private Sub OnPIE_ubicacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = New EntitySet(Of DETALLE_ORDEN_TRABAJO)(AddressOf Me.attach_DETALLE_ORDEN_TRABAJO, AddressOf Me.detach_DETALLE_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_id_pieza", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PIE_id_pieza() As Integer
		Get
			Return Me._PIE_id_pieza
		End Get
		Set
			If ((Me._PIE_id_pieza = value)  _
						= false) Then
				Me.OnPIE_id_piezaChanging(value)
				Me.SendPropertyChanging
				Me._PIE_id_pieza = value
				Me.SendPropertyChanged("PIE_id_pieza")
				Me.OnPIE_id_piezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_nombre_pie", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PIE_nombre_pie() As String
		Get
			Return Me._PIE_nombre_pie
		End Get
		Set
			If (String.Equals(Me._PIE_nombre_pie, value) = false) Then
				Me.OnPIE_nombre_pieChanging(value)
				Me.SendPropertyChanging
				Me._PIE_nombre_pie = value
				Me.SendPropertyChanged("PIE_nombre_pie")
				Me.OnPIE_nombre_pieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_ubicacion", DbType:="VarChar(1)")>  _
	Public Property PIE_ubicacion() As String
		Get
			Return Me._PIE_ubicacion
		End Get
		Set
			If (String.Equals(Me._PIE_ubicacion, value) = false) Then
				Me.OnPIE_ubicacionChanging(value)
				Me.SendPropertyChanging
				Me._PIE_ubicacion = value
				Me.SendPropertyChanged("PIE_ubicacion")
				Me.OnPIE_ubicacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PIEZA1_DETALLE_ORDEN_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="PIE_id_pieza", OtherKey:="PIE_id_pieza_offset")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As EntitySet(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me._DETALLE_ORDEN_TRABAJO
		End Get
		Set
			Me._DETALLE_ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.PIEZA1 = Me
	End Sub
	
	Private Sub detach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.PIEZA1 = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SOPORTE")>  _
Partial Public Class SOPORTE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SOP_id_soporte As Integer
	
	Private _SOP_nombre_soporte As String
	
	Private _SOP_ubicacion As String
	
	Private _SOP_campo1 As String
	
	Private _SOP_campo2 As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSOP_id_soporteChanging(value As Integer)
    End Sub
    Partial Private Sub OnSOP_id_soporteChanged()
    End Sub
    Partial Private Sub OnSOP_nombre_soporteChanging(value As String)
    End Sub
    Partial Private Sub OnSOP_nombre_soporteChanged()
    End Sub
    Partial Private Sub OnSOP_ubicacionChanging(value As String)
    End Sub
    Partial Private Sub OnSOP_ubicacionChanged()
    End Sub
    Partial Private Sub OnSOP_campo1Changing(value As String)
    End Sub
    Partial Private Sub OnSOP_campo1Changed()
    End Sub
    Partial Private Sub OnSOP_campo2Changing(value As String)
    End Sub
    Partial Private Sub OnSOP_campo2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOP_id_soporte", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SOP_id_soporte() As Integer
		Get
			Return Me._SOP_id_soporte
		End Get
		Set
			If ((Me._SOP_id_soporte = value)  _
						= false) Then
				Me.OnSOP_id_soporteChanging(value)
				Me.SendPropertyChanging
				Me._SOP_id_soporte = value
				Me.SendPropertyChanged("SOP_id_soporte")
				Me.OnSOP_id_soporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOP_nombre_soporte", DbType:="VarChar(50)")>  _
	Public Property SOP_nombre_soporte() As String
		Get
			Return Me._SOP_nombre_soporte
		End Get
		Set
			If (String.Equals(Me._SOP_nombre_soporte, value) = false) Then
				Me.OnSOP_nombre_soporteChanging(value)
				Me.SendPropertyChanging
				Me._SOP_nombre_soporte = value
				Me.SendPropertyChanged("SOP_nombre_soporte")
				Me.OnSOP_nombre_soporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOP_ubicacion", DbType:="VarChar(1)")>  _
	Public Property SOP_ubicacion() As String
		Get
			Return Me._SOP_ubicacion
		End Get
		Set
			If (String.Equals(Me._SOP_ubicacion, value) = false) Then
				Me.OnSOP_ubicacionChanging(value)
				Me.SendPropertyChanging
				Me._SOP_ubicacion = value
				Me.SendPropertyChanged("SOP_ubicacion")
				Me.OnSOP_ubicacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOP_campo1", DbType:="VarChar(50)")>  _
	Public Property SOP_campo1() As String
		Get
			Return Me._SOP_campo1
		End Get
		Set
			If (String.Equals(Me._SOP_campo1, value) = false) Then
				Me.OnSOP_campo1Changing(value)
				Me.SendPropertyChanging
				Me._SOP_campo1 = value
				Me.SendPropertyChanged("SOP_campo1")
				Me.OnSOP_campo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOP_campo2", DbType:="VarChar(50)")>  _
	Public Property SOP_campo2() As String
		Get
			Return Me._SOP_campo2
		End Get
		Set
			If (String.Equals(Me._SOP_campo2, value) = false) Then
				Me.OnSOP_campo2Changing(value)
				Me.SendPropertyChanging
				Me._SOP_campo2 = value
				Me.SendPropertyChanged("SOP_campo2")
				Me.OnSOP_campo2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DETALLE_ORDEN_TRABAJO")>  _
Partial Public Class DETALLE_ORDEN_TRABAJO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_detalle_orden_trabajo As Integer
	
	Private _DOT_cantidad_producto As System.Nullable(Of Integer)
	
	Private _DOT_tamaño_producto As String
	
	Private _DOT_tipo_impresion_dot As String
	
	Private _DOT_papel_soporte_1 As String
	
	Private _DOT_papel_soporte_2 As String
	
	Private _DOT_papel_soporte_3 As String
	
	Private _DOT_gramaje_soporte_1 As String
	
	Private _DOT_gramaje_soporte_2 As String
	
	Private _DOT_gramaje_soporte_3 As String
	
	Private _DOT_cantidad_soporte_1 As System.Nullable(Of Integer)
	
	Private _DOT_cantidad_soporte_2 As System.Nullable(Of Integer)
	
	Private _DOT_cantidad_soporte_3 As System.Nullable(Of Integer)
	
	Private _DOT_formato_soporte_1 As String
	
	Private _DOT_formato_soporte_2 As String
	
	Private _DOT_formato_soporte_3 As String
	
	Private _PIE_id_pieza As System.Nullable(Of Integer)
	
	Private _ORT_id_orden_trabajo As System.Nullable(Of Integer)
	
	Private _cantidad_1_PM_offset As System.Nullable(Of Integer)
	
	Private _cantidad_2_PM_offset As System.Nullable(Of Integer)
	
	Private _cantidad_3_PM_offset As System.Nullable(Of Integer)
	
	Private _formato_1_PM_offset As String
	
	Private _formato_2_PM_offset As String
	
	Private _formato_3_PM_offset As String
	
	Private _PIE_id_pieza_offset As System.Nullable(Of Integer)
	
	Private _modo_impresion_offset As String
	
	Private _tipo_impresion_offset As String
	
	Private _chapas_soporte1_offset As System.Nullable(Of Integer)
	
	Private _chapas_soporte2_offset As System.Nullable(Of Integer)
	
	Private _chapas_soporte3_offset As System.Nullable(Of Integer)
	
	Private _impresora_offset As String
	
	Private _marca_offset As String
	
	Private _cantidad_1_PM_digital As System.Nullable(Of Integer)
	
	Private _cantidad_2_PM_digital As System.Nullable(Of Integer)
	
	Private _cantidad_3_PM_digital As System.Nullable(Of Integer)
	
	Private _formato_1_PM_digital As String
	
	Private _formato_2_PM_digital As String
	
	Private _formato_3_PM_digital As String
	
	Private _modo_impresion_digital As String
	
	Private _tipo_impresion_digital As String
	
	Private _dato_variable As String
	
	Private _cantidad_gran_formato As System.Nullable(Of Integer)
	
	Private _tamaño_gran_formato As String
	
	Private _sustrato_gran_formato As String
	
	Private _calidad_gran_formato As String
	
	Private _sistema_gran_formato As String
	
	Private _tipo_terminacion As String
	
	Private _descripcion_terminacion As String
	
	Private _PROCESO As EntitySet(Of PROCESO)
	
	Private _RE_TRABAJO As EntitySet(Of RE_TRABAJO)
	
	Private _ORDEN_TRABAJO As EntityRef(Of ORDEN_TRABAJO)
	
	Private _PIEZA As EntityRef(Of PIEZA)
	
	Private _PIEZA1 As EntityRef(Of PIEZA1)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnDOT_cantidad_productoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_productoChanged()
    End Sub
    Partial Private Sub OnDOT_tamaño_productoChanging(value As String)
    End Sub
    Partial Private Sub OnDOT_tamaño_productoChanged()
    End Sub
    Partial Private Sub OnDOT_tipo_impresion_dotChanging(value As String)
    End Sub
    Partial Private Sub OnDOT_tipo_impresion_dotChanged()
    End Sub
    Partial Private Sub OnDOT_papel_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_papel_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_papel_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_papel_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_papel_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_papel_soporte_3Changed()
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_3Changed()
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_3Changed()
    End Sub
    Partial Private Sub OnDOT_formato_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_formato_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_formato_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_formato_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_formato_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_formato_soporte_3Changed()
    End Sub
    Partial Private Sub OnPIE_id_piezaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPIE_id_piezaChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub Oncantidad_1_PM_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_1_PM_offsetChanged()
    End Sub
    Partial Private Sub Oncantidad_2_PM_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_2_PM_offsetChanged()
    End Sub
    Partial Private Sub Oncantidad_3_PM_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_3_PM_offsetChanged()
    End Sub
    Partial Private Sub Onformato_1_PM_offsetChanging(value As String)
    End Sub
    Partial Private Sub Onformato_1_PM_offsetChanged()
    End Sub
    Partial Private Sub Onformato_2_PM_offsetChanging(value As String)
    End Sub
    Partial Private Sub Onformato_2_PM_offsetChanged()
    End Sub
    Partial Private Sub Onformato_3_PM_offsetChanging(value As String)
    End Sub
    Partial Private Sub Onformato_3_PM_offsetChanged()
    End Sub
    Partial Private Sub OnPIE_id_pieza_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPIE_id_pieza_offsetChanged()
    End Sub
    Partial Private Sub Onmodo_impresion_offsetChanging(value As String)
    End Sub
    Partial Private Sub Onmodo_impresion_offsetChanged()
    End Sub
    Partial Private Sub Ontipo_impresion_offsetChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_impresion_offsetChanged()
    End Sub
    Partial Private Sub Onchapas_soporte1_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onchapas_soporte1_offsetChanged()
    End Sub
    Partial Private Sub Onchapas_soporte2_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onchapas_soporte2_offsetChanged()
    End Sub
    Partial Private Sub Onchapas_soporte3_offsetChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onchapas_soporte3_offsetChanged()
    End Sub
    Partial Private Sub Onimpresora_offsetChanging(value As String)
    End Sub
    Partial Private Sub Onimpresora_offsetChanged()
    End Sub
    Partial Private Sub Onmarca_offsetChanging(value As String)
    End Sub
    Partial Private Sub Onmarca_offsetChanged()
    End Sub
    Partial Private Sub Oncantidad_1_PM_digitalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_1_PM_digitalChanged()
    End Sub
    Partial Private Sub Oncantidad_2_PM_digitalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_2_PM_digitalChanged()
    End Sub
    Partial Private Sub Oncantidad_3_PM_digitalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_3_PM_digitalChanged()
    End Sub
    Partial Private Sub Onformato_1_PM_digitalChanging(value As String)
    End Sub
    Partial Private Sub Onformato_1_PM_digitalChanged()
    End Sub
    Partial Private Sub Onformato_2_PM_digitalChanging(value As String)
    End Sub
    Partial Private Sub Onformato_2_PM_digitalChanged()
    End Sub
    Partial Private Sub Onformato_3_PM_digitalChanging(value As String)
    End Sub
    Partial Private Sub Onformato_3_PM_digitalChanged()
    End Sub
    Partial Private Sub Onmodo_impresion_digitalChanging(value As String)
    End Sub
    Partial Private Sub Onmodo_impresion_digitalChanged()
    End Sub
    Partial Private Sub Ontipo_impresion_digitalChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_impresion_digitalChanged()
    End Sub
    Partial Private Sub Ondato_variableChanging(value As String)
    End Sub
    Partial Private Sub Ondato_variableChanged()
    End Sub
    Partial Private Sub Oncantidad_gran_formatoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncantidad_gran_formatoChanged()
    End Sub
    Partial Private Sub Ontamaño_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub Ontamaño_gran_formatoChanged()
    End Sub
    Partial Private Sub Onsustrato_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub Onsustrato_gran_formatoChanged()
    End Sub
    Partial Private Sub Oncalidad_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub Oncalidad_gran_formatoChanged()
    End Sub
    Partial Private Sub Onsistema_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub Onsistema_gran_formatoChanged()
    End Sub
    Partial Private Sub Ontipo_terminacionChanging(value As String)
    End Sub
    Partial Private Sub Ontipo_terminacionChanged()
    End Sub
    Partial Private Sub Ondescripcion_terminacionChanging(value As String)
    End Sub
    Partial Private Sub Ondescripcion_terminacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PROCESO = New EntitySet(Of PROCESO)(AddressOf Me.attach_PROCESO, AddressOf Me.detach_PROCESO)
		Me._RE_TRABAJO = New EntitySet(Of RE_TRABAJO)(AddressOf Me.attach_RE_TRABAJO, AddressOf Me.detach_RE_TRABAJO)
		Me._ORDEN_TRABAJO = CType(Nothing, EntityRef(Of ORDEN_TRABAJO))
		Me._PIEZA = CType(Nothing, EntityRef(Of PIEZA))
		Me._PIEZA1 = CType(Nothing, EntityRef(Of PIEZA1))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_detalle_orden_trabajo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_detalle_orden_trabajo() As Integer
		Get
			Return Me._id_detalle_orden_trabajo
		End Get
		Set
			If ((Me._id_detalle_orden_trabajo = value)  _
						= false) Then
				Me.Onid_detalle_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._id_detalle_orden_trabajo = value
				Me.SendPropertyChanged("id_detalle_orden_trabajo")
				Me.Onid_detalle_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_producto", DbType:="Int")>  _
	Public Property DOT_cantidad_producto() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_producto
		End Get
		Set
			If (Me._DOT_cantidad_producto.Equals(value) = false) Then
				Me.OnDOT_cantidad_productoChanging(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_producto = value
				Me.SendPropertyChanged("DOT_cantidad_producto")
				Me.OnDOT_cantidad_productoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_tamaño_producto", DbType:="VarChar(50)")>  _
	Public Property DOT_tamaño_producto() As String
		Get
			Return Me._DOT_tamaño_producto
		End Get
		Set
			If (String.Equals(Me._DOT_tamaño_producto, value) = false) Then
				Me.OnDOT_tamaño_productoChanging(value)
				Me.SendPropertyChanging
				Me._DOT_tamaño_producto = value
				Me.SendPropertyChanged("DOT_tamaño_producto")
				Me.OnDOT_tamaño_productoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_tipo_impresion_dot", DbType:="VarChar(4)")>  _
	Public Property DOT_tipo_impresion_dot() As String
		Get
			Return Me._DOT_tipo_impresion_dot
		End Get
		Set
			If (String.Equals(Me._DOT_tipo_impresion_dot, value) = false) Then
				Me.OnDOT_tipo_impresion_dotChanging(value)
				Me.SendPropertyChanging
				Me._DOT_tipo_impresion_dot = value
				Me.SendPropertyChanged("DOT_tipo_impresion_dot")
				Me.OnDOT_tipo_impresion_dotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_papel_soporte_1", DbType:="VarChar(50)")>  _
	Public Property DOT_papel_soporte_1() As String
		Get
			Return Me._DOT_papel_soporte_1
		End Get
		Set
			If (String.Equals(Me._DOT_papel_soporte_1, value) = false) Then
				Me.OnDOT_papel_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_papel_soporte_1 = value
				Me.SendPropertyChanged("DOT_papel_soporte_1")
				Me.OnDOT_papel_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_papel_soporte_2", DbType:="VarChar(50)")>  _
	Public Property DOT_papel_soporte_2() As String
		Get
			Return Me._DOT_papel_soporte_2
		End Get
		Set
			If (String.Equals(Me._DOT_papel_soporte_2, value) = false) Then
				Me.OnDOT_papel_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_papel_soporte_2 = value
				Me.SendPropertyChanged("DOT_papel_soporte_2")
				Me.OnDOT_papel_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_papel_soporte_3", DbType:="VarChar(50)")>  _
	Public Property DOT_papel_soporte_3() As String
		Get
			Return Me._DOT_papel_soporte_3
		End Get
		Set
			If (String.Equals(Me._DOT_papel_soporte_3, value) = false) Then
				Me.OnDOT_papel_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_papel_soporte_3 = value
				Me.SendPropertyChanged("DOT_papel_soporte_3")
				Me.OnDOT_papel_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_gramaje_soporte_1", DbType:="VarChar(10)")>  _
	Public Property DOT_gramaje_soporte_1() As String
		Get
			Return Me._DOT_gramaje_soporte_1
		End Get
		Set
			If (String.Equals(Me._DOT_gramaje_soporte_1, value) = false) Then
				Me.OnDOT_gramaje_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_gramaje_soporte_1 = value
				Me.SendPropertyChanged("DOT_gramaje_soporte_1")
				Me.OnDOT_gramaje_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_gramaje_soporte_2", DbType:="VarChar(10)")>  _
	Public Property DOT_gramaje_soporte_2() As String
		Get
			Return Me._DOT_gramaje_soporte_2
		End Get
		Set
			If (String.Equals(Me._DOT_gramaje_soporte_2, value) = false) Then
				Me.OnDOT_gramaje_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_gramaje_soporte_2 = value
				Me.SendPropertyChanged("DOT_gramaje_soporte_2")
				Me.OnDOT_gramaje_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_gramaje_soporte_3", DbType:="VarChar(10)")>  _
	Public Property DOT_gramaje_soporte_3() As String
		Get
			Return Me._DOT_gramaje_soporte_3
		End Get
		Set
			If (String.Equals(Me._DOT_gramaje_soporte_3, value) = false) Then
				Me.OnDOT_gramaje_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_gramaje_soporte_3 = value
				Me.SendPropertyChanged("DOT_gramaje_soporte_3")
				Me.OnDOT_gramaje_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_soporte_1", DbType:="Int")>  _
	Public Property DOT_cantidad_soporte_1() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_soporte_1
		End Get
		Set
			If (Me._DOT_cantidad_soporte_1.Equals(value) = false) Then
				Me.OnDOT_cantidad_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_soporte_1 = value
				Me.SendPropertyChanged("DOT_cantidad_soporte_1")
				Me.OnDOT_cantidad_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_soporte_2", DbType:="Int")>  _
	Public Property DOT_cantidad_soporte_2() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_soporte_2
		End Get
		Set
			If (Me._DOT_cantidad_soporte_2.Equals(value) = false) Then
				Me.OnDOT_cantidad_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_soporte_2 = value
				Me.SendPropertyChanged("DOT_cantidad_soporte_2")
				Me.OnDOT_cantidad_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_soporte_3", DbType:="Int")>  _
	Public Property DOT_cantidad_soporte_3() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_soporte_3
		End Get
		Set
			If (Me._DOT_cantidad_soporte_3.Equals(value) = false) Then
				Me.OnDOT_cantidad_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_soporte_3 = value
				Me.SendPropertyChanged("DOT_cantidad_soporte_3")
				Me.OnDOT_cantidad_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_formato_soporte_1", DbType:="VarChar(15)")>  _
	Public Property DOT_formato_soporte_1() As String
		Get
			Return Me._DOT_formato_soporte_1
		End Get
		Set
			If (String.Equals(Me._DOT_formato_soporte_1, value) = false) Then
				Me.OnDOT_formato_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_formato_soporte_1 = value
				Me.SendPropertyChanged("DOT_formato_soporte_1")
				Me.OnDOT_formato_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_formato_soporte_2", DbType:="VarChar(15)")>  _
	Public Property DOT_formato_soporte_2() As String
		Get
			Return Me._DOT_formato_soporte_2
		End Get
		Set
			If (String.Equals(Me._DOT_formato_soporte_2, value) = false) Then
				Me.OnDOT_formato_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_formato_soporte_2 = value
				Me.SendPropertyChanged("DOT_formato_soporte_2")
				Me.OnDOT_formato_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_formato_soporte_3", DbType:="VarChar(15)")>  _
	Public Property DOT_formato_soporte_3() As String
		Get
			Return Me._DOT_formato_soporte_3
		End Get
		Set
			If (String.Equals(Me._DOT_formato_soporte_3, value) = false) Then
				Me.OnDOT_formato_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_formato_soporte_3 = value
				Me.SendPropertyChanged("DOT_formato_soporte_3")
				Me.OnDOT_formato_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_id_pieza", DbType:="Int")>  _
	Public Property PIE_id_pieza() As System.Nullable(Of Integer)
		Get
			Return Me._PIE_id_pieza
		End Get
		Set
			If (Me._PIE_id_pieza.Equals(value) = false) Then
				If Me._PIEZA.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPIE_id_piezaChanging(value)
				Me.SendPropertyChanging
				Me._PIE_id_pieza = value
				Me.SendPropertyChanged("PIE_id_pieza")
				Me.OnPIE_id_piezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="Int")>  _
	Public Property ORT_id_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (Me._ORT_id_orden_trabajo.Equals(value) = false) Then
				If Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_1_PM_offset", DbType:="Int")>  _
	Public Property cantidad_1_PM_offset() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_1_PM_offset
		End Get
		Set
			If (Me._cantidad_1_PM_offset.Equals(value) = false) Then
				Me.Oncantidad_1_PM_offsetChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_1_PM_offset = value
				Me.SendPropertyChanged("cantidad_1_PM_offset")
				Me.Oncantidad_1_PM_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_2_PM_offset", DbType:="Int")>  _
	Public Property cantidad_2_PM_offset() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_2_PM_offset
		End Get
		Set
			If (Me._cantidad_2_PM_offset.Equals(value) = false) Then
				Me.Oncantidad_2_PM_offsetChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_2_PM_offset = value
				Me.SendPropertyChanged("cantidad_2_PM_offset")
				Me.Oncantidad_2_PM_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_3_PM_offset", DbType:="Int")>  _
	Public Property cantidad_3_PM_offset() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_3_PM_offset
		End Get
		Set
			If (Me._cantidad_3_PM_offset.Equals(value) = false) Then
				Me.Oncantidad_3_PM_offsetChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_3_PM_offset = value
				Me.SendPropertyChanged("cantidad_3_PM_offset")
				Me.Oncantidad_3_PM_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_1_PM_offset", DbType:="VarChar(15)")>  _
	Public Property formato_1_PM_offset() As String
		Get
			Return Me._formato_1_PM_offset
		End Get
		Set
			If (String.Equals(Me._formato_1_PM_offset, value) = false) Then
				Me.Onformato_1_PM_offsetChanging(value)
				Me.SendPropertyChanging
				Me._formato_1_PM_offset = value
				Me.SendPropertyChanged("formato_1_PM_offset")
				Me.Onformato_1_PM_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_2_PM_offset", DbType:="VarChar(15)")>  _
	Public Property formato_2_PM_offset() As String
		Get
			Return Me._formato_2_PM_offset
		End Get
		Set
			If (String.Equals(Me._formato_2_PM_offset, value) = false) Then
				Me.Onformato_2_PM_offsetChanging(value)
				Me.SendPropertyChanging
				Me._formato_2_PM_offset = value
				Me.SendPropertyChanged("formato_2_PM_offset")
				Me.Onformato_2_PM_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_3_PM_offset", DbType:="VarChar(15)")>  _
	Public Property formato_3_PM_offset() As String
		Get
			Return Me._formato_3_PM_offset
		End Get
		Set
			If (String.Equals(Me._formato_3_PM_offset, value) = false) Then
				Me.Onformato_3_PM_offsetChanging(value)
				Me.SendPropertyChanging
				Me._formato_3_PM_offset = value
				Me.SendPropertyChanged("formato_3_PM_offset")
				Me.Onformato_3_PM_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_id_pieza_offset", DbType:="Int")>  _
	Public Property PIE_id_pieza_offset() As System.Nullable(Of Integer)
		Get
			Return Me._PIE_id_pieza_offset
		End Get
		Set
			If (Me._PIE_id_pieza_offset.Equals(value) = false) Then
				If Me._PIEZA1.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPIE_id_pieza_offsetChanging(value)
				Me.SendPropertyChanging
				Me._PIE_id_pieza_offset = value
				Me.SendPropertyChanged("PIE_id_pieza_offset")
				Me.OnPIE_id_pieza_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modo_impresion_offset", DbType:="VarChar(25)")>  _
	Public Property modo_impresion_offset() As String
		Get
			Return Me._modo_impresion_offset
		End Get
		Set
			If (String.Equals(Me._modo_impresion_offset, value) = false) Then
				Me.Onmodo_impresion_offsetChanging(value)
				Me.SendPropertyChanging
				Me._modo_impresion_offset = value
				Me.SendPropertyChanged("modo_impresion_offset")
				Me.Onmodo_impresion_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_impresion_offset", DbType:="VarChar(15)")>  _
	Public Property tipo_impresion_offset() As String
		Get
			Return Me._tipo_impresion_offset
		End Get
		Set
			If (String.Equals(Me._tipo_impresion_offset, value) = false) Then
				Me.Ontipo_impresion_offsetChanging(value)
				Me.SendPropertyChanging
				Me._tipo_impresion_offset = value
				Me.SendPropertyChanged("tipo_impresion_offset")
				Me.Ontipo_impresion_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chapas_soporte1_offset", DbType:="Int")>  _
	Public Property chapas_soporte1_offset() As System.Nullable(Of Integer)
		Get
			Return Me._chapas_soporte1_offset
		End Get
		Set
			If (Me._chapas_soporte1_offset.Equals(value) = false) Then
				Me.Onchapas_soporte1_offsetChanging(value)
				Me.SendPropertyChanging
				Me._chapas_soporte1_offset = value
				Me.SendPropertyChanged("chapas_soporte1_offset")
				Me.Onchapas_soporte1_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chapas_soporte2_offset", DbType:="Int")>  _
	Public Property chapas_soporte2_offset() As System.Nullable(Of Integer)
		Get
			Return Me._chapas_soporte2_offset
		End Get
		Set
			If (Me._chapas_soporte2_offset.Equals(value) = false) Then
				Me.Onchapas_soporte2_offsetChanging(value)
				Me.SendPropertyChanging
				Me._chapas_soporte2_offset = value
				Me.SendPropertyChanged("chapas_soporte2_offset")
				Me.Onchapas_soporte2_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chapas_soporte3_offset", DbType:="Int")>  _
	Public Property chapas_soporte3_offset() As System.Nullable(Of Integer)
		Get
			Return Me._chapas_soporte3_offset
		End Get
		Set
			If (Me._chapas_soporte3_offset.Equals(value) = false) Then
				Me.Onchapas_soporte3_offsetChanging(value)
				Me.SendPropertyChanging
				Me._chapas_soporte3_offset = value
				Me.SendPropertyChanged("chapas_soporte3_offset")
				Me.Onchapas_soporte3_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_impresora_offset", DbType:="VarChar(15)")>  _
	Public Property impresora_offset() As String
		Get
			Return Me._impresora_offset
		End Get
		Set
			If (String.Equals(Me._impresora_offset, value) = false) Then
				Me.Onimpresora_offsetChanging(value)
				Me.SendPropertyChanging
				Me._impresora_offset = value
				Me.SendPropertyChanged("impresora_offset")
				Me.Onimpresora_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_marca_offset", DbType:="VarChar(15)")>  _
	Public Property marca_offset() As String
		Get
			Return Me._marca_offset
		End Get
		Set
			If (String.Equals(Me._marca_offset, value) = false) Then
				Me.Onmarca_offsetChanging(value)
				Me.SendPropertyChanging
				Me._marca_offset = value
				Me.SendPropertyChanged("marca_offset")
				Me.Onmarca_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_1_PM_digital", DbType:="Int")>  _
	Public Property cantidad_1_PM_digital() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_1_PM_digital
		End Get
		Set
			If (Me._cantidad_1_PM_digital.Equals(value) = false) Then
				Me.Oncantidad_1_PM_digitalChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_1_PM_digital = value
				Me.SendPropertyChanged("cantidad_1_PM_digital")
				Me.Oncantidad_1_PM_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_2_PM_digital", DbType:="Int")>  _
	Public Property cantidad_2_PM_digital() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_2_PM_digital
		End Get
		Set
			If (Me._cantidad_2_PM_digital.Equals(value) = false) Then
				Me.Oncantidad_2_PM_digitalChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_2_PM_digital = value
				Me.SendPropertyChanged("cantidad_2_PM_digital")
				Me.Oncantidad_2_PM_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_3_PM_digital", DbType:="Int")>  _
	Public Property cantidad_3_PM_digital() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_3_PM_digital
		End Get
		Set
			If (Me._cantidad_3_PM_digital.Equals(value) = false) Then
				Me.Oncantidad_3_PM_digitalChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_3_PM_digital = value
				Me.SendPropertyChanged("cantidad_3_PM_digital")
				Me.Oncantidad_3_PM_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_1_PM_digital", DbType:="VarChar(15)")>  _
	Public Property formato_1_PM_digital() As String
		Get
			Return Me._formato_1_PM_digital
		End Get
		Set
			If (String.Equals(Me._formato_1_PM_digital, value) = false) Then
				Me.Onformato_1_PM_digitalChanging(value)
				Me.SendPropertyChanging
				Me._formato_1_PM_digital = value
				Me.SendPropertyChanged("formato_1_PM_digital")
				Me.Onformato_1_PM_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_2_PM_digital", DbType:="VarChar(15)")>  _
	Public Property formato_2_PM_digital() As String
		Get
			Return Me._formato_2_PM_digital
		End Get
		Set
			If (String.Equals(Me._formato_2_PM_digital, value) = false) Then
				Me.Onformato_2_PM_digitalChanging(value)
				Me.SendPropertyChanging
				Me._formato_2_PM_digital = value
				Me.SendPropertyChanged("formato_2_PM_digital")
				Me.Onformato_2_PM_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_formato_3_PM_digital", DbType:="VarChar(15)")>  _
	Public Property formato_3_PM_digital() As String
		Get
			Return Me._formato_3_PM_digital
		End Get
		Set
			If (String.Equals(Me._formato_3_PM_digital, value) = false) Then
				Me.Onformato_3_PM_digitalChanging(value)
				Me.SendPropertyChanging
				Me._formato_3_PM_digital = value
				Me.SendPropertyChanged("formato_3_PM_digital")
				Me.Onformato_3_PM_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modo_impresion_digital", DbType:="VarChar(15)")>  _
	Public Property modo_impresion_digital() As String
		Get
			Return Me._modo_impresion_digital
		End Get
		Set
			If (String.Equals(Me._modo_impresion_digital, value) = false) Then
				Me.Onmodo_impresion_digitalChanging(value)
				Me.SendPropertyChanging
				Me._modo_impresion_digital = value
				Me.SendPropertyChanged("modo_impresion_digital")
				Me.Onmodo_impresion_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_impresion_digital", DbType:="VarChar(15)")>  _
	Public Property tipo_impresion_digital() As String
		Get
			Return Me._tipo_impresion_digital
		End Get
		Set
			If (String.Equals(Me._tipo_impresion_digital, value) = false) Then
				Me.Ontipo_impresion_digitalChanging(value)
				Me.SendPropertyChanging
				Me._tipo_impresion_digital = value
				Me.SendPropertyChanged("tipo_impresion_digital")
				Me.Ontipo_impresion_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dato_variable", DbType:="VarChar(350)")>  _
	Public Property dato_variable() As String
		Get
			Return Me._dato_variable
		End Get
		Set
			If (String.Equals(Me._dato_variable, value) = false) Then
				Me.Ondato_variableChanging(value)
				Me.SendPropertyChanging
				Me._dato_variable = value
				Me.SendPropertyChanged("dato_variable")
				Me.Ondato_variableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cantidad_gran_formato", DbType:="Int")>  _
	Public Property cantidad_gran_formato() As System.Nullable(Of Integer)
		Get
			Return Me._cantidad_gran_formato
		End Get
		Set
			If (Me._cantidad_gran_formato.Equals(value) = false) Then
				Me.Oncantidad_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._cantidad_gran_formato = value
				Me.SendPropertyChanged("cantidad_gran_formato")
				Me.Oncantidad_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tamaño_gran_formato", DbType:="VarChar(15)")>  _
	Public Property tamaño_gran_formato() As String
		Get
			Return Me._tamaño_gran_formato
		End Get
		Set
			If (String.Equals(Me._tamaño_gran_formato, value) = false) Then
				Me.Ontamaño_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._tamaño_gran_formato = value
				Me.SendPropertyChanged("tamaño_gran_formato")
				Me.Ontamaño_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sustrato_gran_formato", DbType:="VarChar(100)")>  _
	Public Property sustrato_gran_formato() As String
		Get
			Return Me._sustrato_gran_formato
		End Get
		Set
			If (String.Equals(Me._sustrato_gran_formato, value) = false) Then
				Me.Onsustrato_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._sustrato_gran_formato = value
				Me.SendPropertyChanged("sustrato_gran_formato")
				Me.Onsustrato_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_calidad_gran_formato", DbType:="VarChar(25)")>  _
	Public Property calidad_gran_formato() As String
		Get
			Return Me._calidad_gran_formato
		End Get
		Set
			If (String.Equals(Me._calidad_gran_formato, value) = false) Then
				Me.Oncalidad_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._calidad_gran_formato = value
				Me.SendPropertyChanged("calidad_gran_formato")
				Me.Oncalidad_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sistema_gran_formato", DbType:="VarChar(25)")>  _
	Public Property sistema_gran_formato() As String
		Get
			Return Me._sistema_gran_formato
		End Get
		Set
			If (String.Equals(Me._sistema_gran_formato, value) = false) Then
				Me.Onsistema_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._sistema_gran_formato = value
				Me.SendPropertyChanged("sistema_gran_formato")
				Me.Onsistema_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo_terminacion", DbType:="VarChar(120)")>  _
	Public Property tipo_terminacion() As String
		Get
			Return Me._tipo_terminacion
		End Get
		Set
			If (String.Equals(Me._tipo_terminacion, value) = false) Then
				Me.Ontipo_terminacionChanging(value)
				Me.SendPropertyChanging
				Me._tipo_terminacion = value
				Me.SendPropertyChanged("tipo_terminacion")
				Me.Ontipo_terminacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descripcion_terminacion", DbType:="VarChar(350)")>  _
	Public Property descripcion_terminacion() As String
		Get
			Return Me._descripcion_terminacion
		End Get
		Set
			If (String.Equals(Me._descripcion_terminacion, value) = false) Then
				Me.Ondescripcion_terminacionChanging(value)
				Me.SendPropertyChanging
				Me._descripcion_terminacion = value
				Me.SendPropertyChanged("descripcion_terminacion")
				Me.Ondescripcion_terminacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_PROCESO", Storage:="_PROCESO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="id_detalle_orden_trabajo")>  _
	Public Property PROCESO() As EntitySet(Of PROCESO)
		Get
			Return Me._PROCESO
		End Get
		Set
			Me._PROCESO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_RE_TRABAJO", Storage:="_RE_TRABAJO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="RET_cantidad_producto_retrabajo")>  _
	Public Property RE_TRABAJO() As EntitySet(Of RE_TRABAJO)
		Get
			Return Me._RE_TRABAJO
		End Get
		Set
			Me._RE_TRABAJO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_DETALLE_ORDEN_TRABAJO", Storage:="_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property ORDEN_TRABAJO() As ORDEN_TRABAJO
		Get
			Return Me._ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As ORDEN_TRABAJO = Me._ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ORDEN_TRABAJO.Entity = Nothing
					previousValue.DETALLE_ORDEN_TRABAJO.Remove(Me)
				End If
				Me._ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DETALLE_ORDEN_TRABAJO.Add(Me)
					Me._ORT_id_orden_trabajo = value.ORT_id_orden_trabajo
				Else
					Me._ORT_id_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PIEZA_DETALLE_ORDEN_TRABAJO", Storage:="_PIEZA", ThisKey:="PIE_id_pieza", OtherKey:="PIE_id_pieza", IsForeignKey:=true)>  _
	Public Property PIEZA() As PIEZA
		Get
			Return Me._PIEZA.Entity
		End Get
		Set
			Dim previousValue As PIEZA = Me._PIEZA.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PIEZA.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PIEZA.Entity = Nothing
					previousValue.DETALLE_ORDEN_TRABAJO.Remove(Me)
				End If
				Me._PIEZA.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DETALLE_ORDEN_TRABAJO.Add(Me)
					Me._PIE_id_pieza = value.PIE_id_pieza
				Else
					Me._PIE_id_pieza = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("PIEZA")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PIEZA1_DETALLE_ORDEN_TRABAJO", Storage:="_PIEZA1", ThisKey:="PIE_id_pieza_offset", OtherKey:="PIE_id_pieza", IsForeignKey:=true)>  _
	Public Property PIEZA1() As PIEZA1
		Get
			Return Me._PIEZA1.Entity
		End Get
		Set
			Dim previousValue As PIEZA1 = Me._PIEZA1.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PIEZA1.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PIEZA1.Entity = Nothing
					previousValue.DETALLE_ORDEN_TRABAJO.Remove(Me)
				End If
				Me._PIEZA1.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DETALLE_ORDEN_TRABAJO.Add(Me)
					Me._PIE_id_pieza_offset = value.PIE_id_pieza
				Else
					Me._PIE_id_pieza_offset = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("PIEZA1")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_PROCESO(ByVal entity As PROCESO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_PROCESO(ByVal entity As PROCESO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Nothing
	End Sub
	
	Private Sub attach_RE_TRABAJO(ByVal entity As RE_TRABAJO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_RE_TRABAJO(ByVal entity As RE_TRABAJO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TICKET")>  _
Partial Public Class TICKET
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TIC_id_ticket As Integer
	
	Private _TIC_id_usuario As System.Nullable(Of Integer)
	
	Private _TIC_fecha_pedido As System.Nullable(Of Date)
	
	Private _TIC_recurso As String
	
	Private _TIC_herramienta As String
	
	Private _TIC_plazo_resolucion As String
	
	Private _TIC_descripcion As String
	
	Private _TIC_prioridad As String
	
	Private _TIC_estado As String
	
	Private _TIC_fecha_real_cierre As System.Nullable(Of Date)
	
	Private _TIC_fecha_estimado_cierre As System.Nullable(Of Date)
	
	Private _TIC_sector As String
	
	Private _TIC_comentarios As String
	
	Private _TIC_campo_1 As String
	
	Private _TIC_campo_2 As String
	
	Private _TIC_campo_3 As String
	
	Private _TIC_campo_4 As String
	
	Private _TIC_campo_5 As String
	
	Private _USUARIO As EntityRef(Of USUARIO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTIC_id_ticketChanging(value As Integer)
    End Sub
    Partial Private Sub OnTIC_id_ticketChanged()
    End Sub
    Partial Private Sub OnTIC_id_usuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTIC_id_usuarioChanged()
    End Sub
    Partial Private Sub OnTIC_fecha_pedidoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIC_fecha_pedidoChanged()
    End Sub
    Partial Private Sub OnTIC_recursoChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_recursoChanged()
    End Sub
    Partial Private Sub OnTIC_herramientaChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_herramientaChanged()
    End Sub
    Partial Private Sub OnTIC_plazo_resolucionChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_plazo_resolucionChanged()
    End Sub
    Partial Private Sub OnTIC_descripcionChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_descripcionChanged()
    End Sub
    Partial Private Sub OnTIC_prioridadChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_prioridadChanged()
    End Sub
    Partial Private Sub OnTIC_estadoChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_estadoChanged()
    End Sub
    Partial Private Sub OnTIC_fecha_real_cierreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIC_fecha_real_cierreChanged()
    End Sub
    Partial Private Sub OnTIC_fecha_estimado_cierreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIC_fecha_estimado_cierreChanged()
    End Sub
    Partial Private Sub OnTIC_sectorChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_sectorChanged()
    End Sub
    Partial Private Sub OnTIC_comentariosChanging(value As String)
    End Sub
    Partial Private Sub OnTIC_comentariosChanged()
    End Sub
    Partial Private Sub OnTIC_campo_1Changing(value As String)
    End Sub
    Partial Private Sub OnTIC_campo_1Changed()
    End Sub
    Partial Private Sub OnTIC_campo_2Changing(value As String)
    End Sub
    Partial Private Sub OnTIC_campo_2Changed()
    End Sub
    Partial Private Sub OnTIC_campo_3Changing(value As String)
    End Sub
    Partial Private Sub OnTIC_campo_3Changed()
    End Sub
    Partial Private Sub OnTIC_campo_4Changing(value As String)
    End Sub
    Partial Private Sub OnTIC_campo_4Changed()
    End Sub
    Partial Private Sub OnTIC_campo_5Changing(value As String)
    End Sub
    Partial Private Sub OnTIC_campo_5Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._USUARIO = CType(Nothing, EntityRef(Of USUARIO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_id_ticket", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TIC_id_ticket() As Integer
		Get
			Return Me._TIC_id_ticket
		End Get
		Set
			If ((Me._TIC_id_ticket = value)  _
						= false) Then
				Me.OnTIC_id_ticketChanging(value)
				Me.SendPropertyChanging
				Me._TIC_id_ticket = value
				Me.SendPropertyChanged("TIC_id_ticket")
				Me.OnTIC_id_ticketChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_id_usuario", DbType:="Int")>  _
	Public Property TIC_id_usuario() As System.Nullable(Of Integer)
		Get
			Return Me._TIC_id_usuario
		End Get
		Set
			If (Me._TIC_id_usuario.Equals(value) = false) Then
				If Me._USUARIO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTIC_id_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._TIC_id_usuario = value
				Me.SendPropertyChanged("TIC_id_usuario")
				Me.OnTIC_id_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_fecha_pedido", DbType:="Date")>  _
	Public Property TIC_fecha_pedido() As System.Nullable(Of Date)
		Get
			Return Me._TIC_fecha_pedido
		End Get
		Set
			If (Me._TIC_fecha_pedido.Equals(value) = false) Then
				Me.OnTIC_fecha_pedidoChanging(value)
				Me.SendPropertyChanging
				Me._TIC_fecha_pedido = value
				Me.SendPropertyChanged("TIC_fecha_pedido")
				Me.OnTIC_fecha_pedidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_recurso", DbType:="VarChar(50)")>  _
	Public Property TIC_recurso() As String
		Get
			Return Me._TIC_recurso
		End Get
		Set
			If (String.Equals(Me._TIC_recurso, value) = false) Then
				Me.OnTIC_recursoChanging(value)
				Me.SendPropertyChanging
				Me._TIC_recurso = value
				Me.SendPropertyChanged("TIC_recurso")
				Me.OnTIC_recursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_herramienta", DbType:="VarChar(50)")>  _
	Public Property TIC_herramienta() As String
		Get
			Return Me._TIC_herramienta
		End Get
		Set
			If (String.Equals(Me._TIC_herramienta, value) = false) Then
				Me.OnTIC_herramientaChanging(value)
				Me.SendPropertyChanging
				Me._TIC_herramienta = value
				Me.SendPropertyChanged("TIC_herramienta")
				Me.OnTIC_herramientaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_plazo_resolucion", DbType:="VarChar(5)")>  _
	Public Property TIC_plazo_resolucion() As String
		Get
			Return Me._TIC_plazo_resolucion
		End Get
		Set
			If (String.Equals(Me._TIC_plazo_resolucion, value) = false) Then
				Me.OnTIC_plazo_resolucionChanging(value)
				Me.SendPropertyChanging
				Me._TIC_plazo_resolucion = value
				Me.SendPropertyChanged("TIC_plazo_resolucion")
				Me.OnTIC_plazo_resolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_descripcion", DbType:="VarChar(350)")>  _
	Public Property TIC_descripcion() As String
		Get
			Return Me._TIC_descripcion
		End Get
		Set
			If (String.Equals(Me._TIC_descripcion, value) = false) Then
				Me.OnTIC_descripcionChanging(value)
				Me.SendPropertyChanging
				Me._TIC_descripcion = value
				Me.SendPropertyChanged("TIC_descripcion")
				Me.OnTIC_descripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_prioridad", DbType:="VarChar(20)")>  _
	Public Property TIC_prioridad() As String
		Get
			Return Me._TIC_prioridad
		End Get
		Set
			If (String.Equals(Me._TIC_prioridad, value) = false) Then
				Me.OnTIC_prioridadChanging(value)
				Me.SendPropertyChanging
				Me._TIC_prioridad = value
				Me.SendPropertyChanged("TIC_prioridad")
				Me.OnTIC_prioridadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_estado", DbType:="VarChar(20)")>  _
	Public Property TIC_estado() As String
		Get
			Return Me._TIC_estado
		End Get
		Set
			If (String.Equals(Me._TIC_estado, value) = false) Then
				Me.OnTIC_estadoChanging(value)
				Me.SendPropertyChanging
				Me._TIC_estado = value
				Me.SendPropertyChanged("TIC_estado")
				Me.OnTIC_estadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_fecha_real_cierre", DbType:="Date")>  _
	Public Property TIC_fecha_real_cierre() As System.Nullable(Of Date)
		Get
			Return Me._TIC_fecha_real_cierre
		End Get
		Set
			If (Me._TIC_fecha_real_cierre.Equals(value) = false) Then
				Me.OnTIC_fecha_real_cierreChanging(value)
				Me.SendPropertyChanging
				Me._TIC_fecha_real_cierre = value
				Me.SendPropertyChanged("TIC_fecha_real_cierre")
				Me.OnTIC_fecha_real_cierreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_fecha_estimado_cierre", DbType:="Date")>  _
	Public Property TIC_fecha_estimado_cierre() As System.Nullable(Of Date)
		Get
			Return Me._TIC_fecha_estimado_cierre
		End Get
		Set
			If (Me._TIC_fecha_estimado_cierre.Equals(value) = false) Then
				Me.OnTIC_fecha_estimado_cierreChanging(value)
				Me.SendPropertyChanging
				Me._TIC_fecha_estimado_cierre = value
				Me.SendPropertyChanged("TIC_fecha_estimado_cierre")
				Me.OnTIC_fecha_estimado_cierreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_sector", DbType:="VarChar(50)")>  _
	Public Property TIC_sector() As String
		Get
			Return Me._TIC_sector
		End Get
		Set
			If (String.Equals(Me._TIC_sector, value) = false) Then
				Me.OnTIC_sectorChanging(value)
				Me.SendPropertyChanging
				Me._TIC_sector = value
				Me.SendPropertyChanged("TIC_sector")
				Me.OnTIC_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_comentarios", DbType:="VarChar(350)")>  _
	Public Property TIC_comentarios() As String
		Get
			Return Me._TIC_comentarios
		End Get
		Set
			If (String.Equals(Me._TIC_comentarios, value) = false) Then
				Me.OnTIC_comentariosChanging(value)
				Me.SendPropertyChanging
				Me._TIC_comentarios = value
				Me.SendPropertyChanged("TIC_comentarios")
				Me.OnTIC_comentariosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_campo_1", DbType:="VarChar(50)")>  _
	Public Property TIC_campo_1() As String
		Get
			Return Me._TIC_campo_1
		End Get
		Set
			If (String.Equals(Me._TIC_campo_1, value) = false) Then
				Me.OnTIC_campo_1Changing(value)
				Me.SendPropertyChanging
				Me._TIC_campo_1 = value
				Me.SendPropertyChanged("TIC_campo_1")
				Me.OnTIC_campo_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_campo_2", DbType:="VarChar(50)")>  _
	Public Property TIC_campo_2() As String
		Get
			Return Me._TIC_campo_2
		End Get
		Set
			If (String.Equals(Me._TIC_campo_2, value) = false) Then
				Me.OnTIC_campo_2Changing(value)
				Me.SendPropertyChanging
				Me._TIC_campo_2 = value
				Me.SendPropertyChanged("TIC_campo_2")
				Me.OnTIC_campo_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_campo_3", DbType:="VarChar(50)")>  _
	Public Property TIC_campo_3() As String
		Get
			Return Me._TIC_campo_3
		End Get
		Set
			If (String.Equals(Me._TIC_campo_3, value) = false) Then
				Me.OnTIC_campo_3Changing(value)
				Me.SendPropertyChanging
				Me._TIC_campo_3 = value
				Me.SendPropertyChanged("TIC_campo_3")
				Me.OnTIC_campo_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_campo_4", DbType:="VarChar(50)")>  _
	Public Property TIC_campo_4() As String
		Get
			Return Me._TIC_campo_4
		End Get
		Set
			If (String.Equals(Me._TIC_campo_4, value) = false) Then
				Me.OnTIC_campo_4Changing(value)
				Me.SendPropertyChanging
				Me._TIC_campo_4 = value
				Me.SendPropertyChanged("TIC_campo_4")
				Me.OnTIC_campo_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIC_campo_5", DbType:="VarChar(50)")>  _
	Public Property TIC_campo_5() As String
		Get
			Return Me._TIC_campo_5
		End Get
		Set
			If (String.Equals(Me._TIC_campo_5, value) = false) Then
				Me.OnTIC_campo_5Changing(value)
				Me.SendPropertyChanging
				Me._TIC_campo_5 = value
				Me.SendPropertyChanged("TIC_campo_5")
				Me.OnTIC_campo_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="USUARIO_TICKET", Storage:="_USUARIO", ThisKey:="TIC_id_usuario", OtherKey:="USU_id_usuario", IsForeignKey:=true)>  _
	Public Property USUARIO() As USUARIO
		Get
			Return Me._USUARIO.Entity
		End Get
		Set
			Dim previousValue As USUARIO = Me._USUARIO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._USUARIO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._USUARIO.Entity = Nothing
					previousValue.TICKET.Remove(Me)
				End If
				Me._USUARIO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TICKET.Add(Me)
					Me._TIC_id_usuario = value.USU_id_usuario
				Else
					Me._TIC_id_usuario = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("USUARIO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DESPACHO")>  _
Partial Public Class DESPACHO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DES_id As Integer
	
	Private _ORT_id_orden_trabajo As System.Nullable(Of Integer)
	
	Private _DES_chofer As String
	
	Private _DES_fecha_salida As System.Nullable(Of Date)
	
	Private _DES_fecha_entrega As System.Nullable(Of Date)
	
	Private _DES_nro_remito As String
	
	Private _DES_observaciones As String
	
	Private _DES_nro_despacho As String
	
	Private _DES_EMB_bultos As String
	
	Private _DES_EMB_estado As String
	
	Private _DES_EMB_observaciones As String
	
	Private _DES_EMB_fecha_estado As System.Nullable(Of Date)
	
	Private _DES_campo_1 As String
	
	Private _DES_campo_2 As String
	
	Private _DES_campo_3 As String
	
	Private _DES_campo_4 As String
	
	Private _DES_campo_5 As String
	
	Private _ORDEN_TRABAJO As EntityRef(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDES_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnDES_idChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnDES_choferChanging(value As String)
    End Sub
    Partial Private Sub OnDES_choferChanged()
    End Sub
    Partial Private Sub OnDES_fecha_salidaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDES_fecha_salidaChanged()
    End Sub
    Partial Private Sub OnDES_fecha_entregaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDES_fecha_entregaChanged()
    End Sub
    Partial Private Sub OnDES_nro_remitoChanging(value As String)
    End Sub
    Partial Private Sub OnDES_nro_remitoChanged()
    End Sub
    Partial Private Sub OnDES_observacionesChanging(value As String)
    End Sub
    Partial Private Sub OnDES_observacionesChanged()
    End Sub
    Partial Private Sub OnDES_nro_despachoChanging(value As String)
    End Sub
    Partial Private Sub OnDES_nro_despachoChanged()
    End Sub
    Partial Private Sub OnDES_EMB_bultosChanging(value As String)
    End Sub
    Partial Private Sub OnDES_EMB_bultosChanged()
    End Sub
    Partial Private Sub OnDES_EMB_estadoChanging(value As String)
    End Sub
    Partial Private Sub OnDES_EMB_estadoChanged()
    End Sub
    Partial Private Sub OnDES_EMB_observacionesChanging(value As String)
    End Sub
    Partial Private Sub OnDES_EMB_observacionesChanged()
    End Sub
    Partial Private Sub OnDES_EMB_fecha_estadoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDES_EMB_fecha_estadoChanged()
    End Sub
    Partial Private Sub OnDES_campo_1Changing(value As String)
    End Sub
    Partial Private Sub OnDES_campo_1Changed()
    End Sub
    Partial Private Sub OnDES_campo_2Changing(value As String)
    End Sub
    Partial Private Sub OnDES_campo_2Changed()
    End Sub
    Partial Private Sub OnDES_campo_3Changing(value As String)
    End Sub
    Partial Private Sub OnDES_campo_3Changed()
    End Sub
    Partial Private Sub OnDES_campo_4Changing(value As String)
    End Sub
    Partial Private Sub OnDES_campo_4Changed()
    End Sub
    Partial Private Sub OnDES_campo_5Changing(value As String)
    End Sub
    Partial Private Sub OnDES_campo_5Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ORDEN_TRABAJO = CType(Nothing, EntityRef(Of ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DES_id() As Integer
		Get
			Return Me._DES_id
		End Get
		Set
			If ((Me._DES_id = value)  _
						= false) Then
				Me.OnDES_idChanging(value)
				Me.SendPropertyChanging
				Me._DES_id = value
				Me.SendPropertyChanged("DES_id")
				Me.OnDES_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="Int")>  _
	Public Property ORT_id_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (Me._ORT_id_orden_trabajo.Equals(value) = false) Then
				If Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_chofer", DbType:="NVarChar(50)")>  _
	Public Property DES_chofer() As String
		Get
			Return Me._DES_chofer
		End Get
		Set
			If (String.Equals(Me._DES_chofer, value) = false) Then
				Me.OnDES_choferChanging(value)
				Me.SendPropertyChanging
				Me._DES_chofer = value
				Me.SendPropertyChanged("DES_chofer")
				Me.OnDES_choferChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_fecha_salida", DbType:="DateTime")>  _
	Public Property DES_fecha_salida() As System.Nullable(Of Date)
		Get
			Return Me._DES_fecha_salida
		End Get
		Set
			If (Me._DES_fecha_salida.Equals(value) = false) Then
				Me.OnDES_fecha_salidaChanging(value)
				Me.SendPropertyChanging
				Me._DES_fecha_salida = value
				Me.SendPropertyChanged("DES_fecha_salida")
				Me.OnDES_fecha_salidaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_fecha_entrega", DbType:="DateTime")>  _
	Public Property DES_fecha_entrega() As System.Nullable(Of Date)
		Get
			Return Me._DES_fecha_entrega
		End Get
		Set
			If (Me._DES_fecha_entrega.Equals(value) = false) Then
				Me.OnDES_fecha_entregaChanging(value)
				Me.SendPropertyChanging
				Me._DES_fecha_entrega = value
				Me.SendPropertyChanged("DES_fecha_entrega")
				Me.OnDES_fecha_entregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_nro_remito", DbType:="NVarChar(20)")>  _
	Public Property DES_nro_remito() As String
		Get
			Return Me._DES_nro_remito
		End Get
		Set
			If (String.Equals(Me._DES_nro_remito, value) = false) Then
				Me.OnDES_nro_remitoChanging(value)
				Me.SendPropertyChanging
				Me._DES_nro_remito = value
				Me.SendPropertyChanged("DES_nro_remito")
				Me.OnDES_nro_remitoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_observaciones", DbType:="NVarChar(150)")>  _
	Public Property DES_observaciones() As String
		Get
			Return Me._DES_observaciones
		End Get
		Set
			If (String.Equals(Me._DES_observaciones, value) = false) Then
				Me.OnDES_observacionesChanging(value)
				Me.SendPropertyChanging
				Me._DES_observaciones = value
				Me.SendPropertyChanged("DES_observaciones")
				Me.OnDES_observacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_nro_despacho", DbType:="NVarChar(50)")>  _
	Public Property DES_nro_despacho() As String
		Get
			Return Me._DES_nro_despacho
		End Get
		Set
			If (String.Equals(Me._DES_nro_despacho, value) = false) Then
				Me.OnDES_nro_despachoChanging(value)
				Me.SendPropertyChanging
				Me._DES_nro_despacho = value
				Me.SendPropertyChanged("DES_nro_despacho")
				Me.OnDES_nro_despachoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_EMB_bultos", DbType:="NVarChar(50)")>  _
	Public Property DES_EMB_bultos() As String
		Get
			Return Me._DES_EMB_bultos
		End Get
		Set
			If (String.Equals(Me._DES_EMB_bultos, value) = false) Then
				Me.OnDES_EMB_bultosChanging(value)
				Me.SendPropertyChanging
				Me._DES_EMB_bultos = value
				Me.SendPropertyChanged("DES_EMB_bultos")
				Me.OnDES_EMB_bultosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_EMB_estado", DbType:="NVarChar(50)")>  _
	Public Property DES_EMB_estado() As String
		Get
			Return Me._DES_EMB_estado
		End Get
		Set
			If (String.Equals(Me._DES_EMB_estado, value) = false) Then
				Me.OnDES_EMB_estadoChanging(value)
				Me.SendPropertyChanging
				Me._DES_EMB_estado = value
				Me.SendPropertyChanged("DES_EMB_estado")
				Me.OnDES_EMB_estadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_EMB_observaciones", DbType:="NVarChar(150)")>  _
	Public Property DES_EMB_observaciones() As String
		Get
			Return Me._DES_EMB_observaciones
		End Get
		Set
			If (String.Equals(Me._DES_EMB_observaciones, value) = false) Then
				Me.OnDES_EMB_observacionesChanging(value)
				Me.SendPropertyChanging
				Me._DES_EMB_observaciones = value
				Me.SendPropertyChanged("DES_EMB_observaciones")
				Me.OnDES_EMB_observacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_EMB_fecha_estado", DbType:="DateTime")>  _
	Public Property DES_EMB_fecha_estado() As System.Nullable(Of Date)
		Get
			Return Me._DES_EMB_fecha_estado
		End Get
		Set
			If (Me._DES_EMB_fecha_estado.Equals(value) = false) Then
				Me.OnDES_EMB_fecha_estadoChanging(value)
				Me.SendPropertyChanging
				Me._DES_EMB_fecha_estado = value
				Me.SendPropertyChanged("DES_EMB_fecha_estado")
				Me.OnDES_EMB_fecha_estadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_campo_1", DbType:="NVarChar(50)")>  _
	Public Property DES_campo_1() As String
		Get
			Return Me._DES_campo_1
		End Get
		Set
			If (String.Equals(Me._DES_campo_1, value) = false) Then
				Me.OnDES_campo_1Changing(value)
				Me.SendPropertyChanging
				Me._DES_campo_1 = value
				Me.SendPropertyChanged("DES_campo_1")
				Me.OnDES_campo_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_campo_2", DbType:="NVarChar(50)")>  _
	Public Property DES_campo_2() As String
		Get
			Return Me._DES_campo_2
		End Get
		Set
			If (String.Equals(Me._DES_campo_2, value) = false) Then
				Me.OnDES_campo_2Changing(value)
				Me.SendPropertyChanging
				Me._DES_campo_2 = value
				Me.SendPropertyChanged("DES_campo_2")
				Me.OnDES_campo_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_campo_3", DbType:="NVarChar(50)")>  _
	Public Property DES_campo_3() As String
		Get
			Return Me._DES_campo_3
		End Get
		Set
			If (String.Equals(Me._DES_campo_3, value) = false) Then
				Me.OnDES_campo_3Changing(value)
				Me.SendPropertyChanging
				Me._DES_campo_3 = value
				Me.SendPropertyChanged("DES_campo_3")
				Me.OnDES_campo_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_campo_4", DbType:="NVarChar(50)")>  _
	Public Property DES_campo_4() As String
		Get
			Return Me._DES_campo_4
		End Get
		Set
			If (String.Equals(Me._DES_campo_4, value) = false) Then
				Me.OnDES_campo_4Changing(value)
				Me.SendPropertyChanging
				Me._DES_campo_4 = value
				Me.SendPropertyChanged("DES_campo_4")
				Me.OnDES_campo_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DES_campo_5", DbType:="NVarChar(50)")>  _
	Public Property DES_campo_5() As String
		Get
			Return Me._DES_campo_5
		End Get
		Set
			If (String.Equals(Me._DES_campo_5, value) = false) Then
				Me.OnDES_campo_5Changing(value)
				Me.SendPropertyChanging
				Me._DES_campo_5 = value
				Me.SendPropertyChanged("DES_campo_5")
				Me.OnDES_campo_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_DESPACHO", Storage:="_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo", IsForeignKey:=true)>  _
	Public Property ORDEN_TRABAJO() As ORDEN_TRABAJO
		Get
			Return Me._ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As ORDEN_TRABAJO = Me._ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ORDEN_TRABAJO.Entity = Nothing
					previousValue.DESPACHO.Remove(Me)
				End If
				Me._ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DESPACHO.Add(Me)
					Me._ORT_id_orden_trabajo = value.ORT_id_orden_trabajo
				Else
					Me._ORT_id_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MENSAJE")>  _
Partial Public Class MENSAJE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MEN_id_mensaje As Integer
	
	Private _USU_id_usuario As System.Nullable(Of Integer)
	
	Private _MEN_fecha_mensaje As System.Nullable(Of Date)
	
	Private _MEN_titulo As String
	
	Private _MEN_comentario As String
	
	Private _MEN_respuesta As String
	
	Private _MEN_campo_1 As String
	
	Private _MEN_campo_2 As String
	
	Private _MEN_campo_3 As String
	
	Private _USUARIO As EntityRef(Of USUARIO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMEN_id_mensajeChanging(value As Integer)
    End Sub
    Partial Private Sub OnMEN_id_mensajeChanged()
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanged()
    End Sub
    Partial Private Sub OnMEN_fecha_mensajeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMEN_fecha_mensajeChanged()
    End Sub
    Partial Private Sub OnMEN_tituloChanging(value As String)
    End Sub
    Partial Private Sub OnMEN_tituloChanged()
    End Sub
    Partial Private Sub OnMEN_comentarioChanging(value As String)
    End Sub
    Partial Private Sub OnMEN_comentarioChanged()
    End Sub
    Partial Private Sub OnMEN_respuestaChanging(value As String)
    End Sub
    Partial Private Sub OnMEN_respuestaChanged()
    End Sub
    Partial Private Sub OnMEN_campo_1Changing(value As String)
    End Sub
    Partial Private Sub OnMEN_campo_1Changed()
    End Sub
    Partial Private Sub OnMEN_campo_2Changing(value As String)
    End Sub
    Partial Private Sub OnMEN_campo_2Changed()
    End Sub
    Partial Private Sub OnMEN_campo_3Changing(value As String)
    End Sub
    Partial Private Sub OnMEN_campo_3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._USUARIO = CType(Nothing, EntityRef(Of USUARIO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_id_mensaje", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property MEN_id_mensaje() As Integer
		Get
			Return Me._MEN_id_mensaje
		End Get
		Set
			If ((Me._MEN_id_mensaje = value)  _
						= false) Then
				Me.OnMEN_id_mensajeChanging(value)
				Me.SendPropertyChanging
				Me._MEN_id_mensaje = value
				Me.SendPropertyChanged("MEN_id_mensaje")
				Me.OnMEN_id_mensajeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_id_usuario", DbType:="Int")>  _
	Public Property USU_id_usuario() As System.Nullable(Of Integer)
		Get
			Return Me._USU_id_usuario
		End Get
		Set
			If (Me._USU_id_usuario.Equals(value) = false) Then
				If Me._USUARIO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnUSU_id_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._USU_id_usuario = value
				Me.SendPropertyChanged("USU_id_usuario")
				Me.OnUSU_id_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_fecha_mensaje", DbType:="Date")>  _
	Public Property MEN_fecha_mensaje() As System.Nullable(Of Date)
		Get
			Return Me._MEN_fecha_mensaje
		End Get
		Set
			If (Me._MEN_fecha_mensaje.Equals(value) = false) Then
				Me.OnMEN_fecha_mensajeChanging(value)
				Me.SendPropertyChanging
				Me._MEN_fecha_mensaje = value
				Me.SendPropertyChanged("MEN_fecha_mensaje")
				Me.OnMEN_fecha_mensajeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_titulo", DbType:="VarChar(50)")>  _
	Public Property MEN_titulo() As String
		Get
			Return Me._MEN_titulo
		End Get
		Set
			If (String.Equals(Me._MEN_titulo, value) = false) Then
				Me.OnMEN_tituloChanging(value)
				Me.SendPropertyChanging
				Me._MEN_titulo = value
				Me.SendPropertyChanged("MEN_titulo")
				Me.OnMEN_tituloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_comentario", DbType:="VarChar(350)")>  _
	Public Property MEN_comentario() As String
		Get
			Return Me._MEN_comentario
		End Get
		Set
			If (String.Equals(Me._MEN_comentario, value) = false) Then
				Me.OnMEN_comentarioChanging(value)
				Me.SendPropertyChanging
				Me._MEN_comentario = value
				Me.SendPropertyChanged("MEN_comentario")
				Me.OnMEN_comentarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_respuesta", DbType:="VarChar(350)")>  _
	Public Property MEN_respuesta() As String
		Get
			Return Me._MEN_respuesta
		End Get
		Set
			If (String.Equals(Me._MEN_respuesta, value) = false) Then
				Me.OnMEN_respuestaChanging(value)
				Me.SendPropertyChanging
				Me._MEN_respuesta = value
				Me.SendPropertyChanged("MEN_respuesta")
				Me.OnMEN_respuestaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_campo_1", DbType:="VarChar(50)")>  _
	Public Property MEN_campo_1() As String
		Get
			Return Me._MEN_campo_1
		End Get
		Set
			If (String.Equals(Me._MEN_campo_1, value) = false) Then
				Me.OnMEN_campo_1Changing(value)
				Me.SendPropertyChanging
				Me._MEN_campo_1 = value
				Me.SendPropertyChanged("MEN_campo_1")
				Me.OnMEN_campo_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_campo_2", DbType:="VarChar(50)")>  _
	Public Property MEN_campo_2() As String
		Get
			Return Me._MEN_campo_2
		End Get
		Set
			If (String.Equals(Me._MEN_campo_2, value) = false) Then
				Me.OnMEN_campo_2Changing(value)
				Me.SendPropertyChanging
				Me._MEN_campo_2 = value
				Me.SendPropertyChanged("MEN_campo_2")
				Me.OnMEN_campo_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEN_campo_3", DbType:="VarChar(50)")>  _
	Public Property MEN_campo_3() As String
		Get
			Return Me._MEN_campo_3
		End Get
		Set
			If (String.Equals(Me._MEN_campo_3, value) = false) Then
				Me.OnMEN_campo_3Changing(value)
				Me.SendPropertyChanging
				Me._MEN_campo_3 = value
				Me.SendPropertyChanged("MEN_campo_3")
				Me.OnMEN_campo_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="USUARIO_MENSAJE", Storage:="_USUARIO", ThisKey:="USU_id_usuario", OtherKey:="USU_id_usuario", IsForeignKey:=true)>  _
	Public Property USUARIO() As USUARIO
		Get
			Return Me._USUARIO.Entity
		End Get
		Set
			Dim previousValue As USUARIO = Me._USUARIO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._USUARIO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._USUARIO.Entity = Nothing
					previousValue.MENSAJE.Remove(Me)
				End If
				Me._USUARIO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.MENSAJE.Add(Me)
					Me._USU_id_usuario = value.USU_id_usuario
				Else
					Me._USU_id_usuario = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("USUARIO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SUGERENCIA")>  _
Partial Public Class SUGERENCIA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SUG_id_sugerencia As Integer
	
	Private _SUG_fecha As System.Nullable(Of Date)
	
	Private _SUG_titulo As String
	
	Private _SUG_sugerencia As String
	
	Private _SUG_campo_1 As String
	
	Private _SUG_campo_2 As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSUG_id_sugerenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnSUG_id_sugerenciaChanged()
    End Sub
    Partial Private Sub OnSUG_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUG_fechaChanged()
    End Sub
    Partial Private Sub OnSUG_tituloChanging(value As String)
    End Sub
    Partial Private Sub OnSUG_tituloChanged()
    End Sub
    Partial Private Sub OnSUG_sugerenciaChanging(value As String)
    End Sub
    Partial Private Sub OnSUG_sugerenciaChanged()
    End Sub
    Partial Private Sub OnSUG_campo_1Changing(value As String)
    End Sub
    Partial Private Sub OnSUG_campo_1Changed()
    End Sub
    Partial Private Sub OnSUG_campo_2Changing(value As String)
    End Sub
    Partial Private Sub OnSUG_campo_2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUG_id_sugerencia", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SUG_id_sugerencia() As Integer
		Get
			Return Me._SUG_id_sugerencia
		End Get
		Set
			If ((Me._SUG_id_sugerencia = value)  _
						= false) Then
				Me.OnSUG_id_sugerenciaChanging(value)
				Me.SendPropertyChanging
				Me._SUG_id_sugerencia = value
				Me.SendPropertyChanged("SUG_id_sugerencia")
				Me.OnSUG_id_sugerenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUG_fecha", DbType:="Date")>  _
	Public Property SUG_fecha() As System.Nullable(Of Date)
		Get
			Return Me._SUG_fecha
		End Get
		Set
			If (Me._SUG_fecha.Equals(value) = false) Then
				Me.OnSUG_fechaChanging(value)
				Me.SendPropertyChanging
				Me._SUG_fecha = value
				Me.SendPropertyChanged("SUG_fecha")
				Me.OnSUG_fechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUG_titulo", DbType:="VarChar(50)")>  _
	Public Property SUG_titulo() As String
		Get
			Return Me._SUG_titulo
		End Get
		Set
			If (String.Equals(Me._SUG_titulo, value) = false) Then
				Me.OnSUG_tituloChanging(value)
				Me.SendPropertyChanging
				Me._SUG_titulo = value
				Me.SendPropertyChanged("SUG_titulo")
				Me.OnSUG_tituloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUG_sugerencia", DbType:="VarChar(500)")>  _
	Public Property SUG_sugerencia() As String
		Get
			Return Me._SUG_sugerencia
		End Get
		Set
			If (String.Equals(Me._SUG_sugerencia, value) = false) Then
				Me.OnSUG_sugerenciaChanging(value)
				Me.SendPropertyChanging
				Me._SUG_sugerencia = value
				Me.SendPropertyChanged("SUG_sugerencia")
				Me.OnSUG_sugerenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUG_campo_1", DbType:="VarChar(50)")>  _
	Public Property SUG_campo_1() As String
		Get
			Return Me._SUG_campo_1
		End Get
		Set
			If (String.Equals(Me._SUG_campo_1, value) = false) Then
				Me.OnSUG_campo_1Changing(value)
				Me.SendPropertyChanging
				Me._SUG_campo_1 = value
				Me.SendPropertyChanged("SUG_campo_1")
				Me.OnSUG_campo_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUG_campo_2", DbType:="VarChar(50)")>  _
	Public Property SUG_campo_2() As String
		Get
			Return Me._SUG_campo_2
		End Get
		Set
			If (String.Equals(Me._SUG_campo_2, value) = false) Then
				Me.OnSUG_campo_2Changing(value)
				Me.SendPropertyChanging
				Me._SUG_campo_2 = value
				Me.SendPropertyChanged("SUG_campo_2")
				Me.OnSUG_campo_2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRODUCTO")>  _
Partial Public Class PRODUCTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROD_id As Integer
	
	Private _PROD_codigo As String
	
	Private _PROD_descripcion As String
	
	Private _PROD_stock As Integer
	
	Private _PROD_stock_minimo As System.Nullable(Of Integer)
	
	Private _PROD_deposito As String
	
	Private _PROD_campo_1 As String
	
	Private _PROD_campo_2 As String
	
	Private _PROD_campo_3 As String
	
	Private _PRODUCTO_MOVIMIENTO As EntitySet(Of PRODUCTO_MOVIMIENTO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROD_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_idChanged()
    End Sub
    Partial Private Sub OnPROD_codigoChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_codigoChanged()
    End Sub
    Partial Private Sub OnPROD_descripcionChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_descripcionChanged()
    End Sub
    Partial Private Sub OnPROD_stockChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_stockChanged()
    End Sub
    Partial Private Sub OnPROD_stock_minimoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROD_stock_minimoChanged()
    End Sub
    Partial Private Sub OnPROD_depositoChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_depositoChanged()
    End Sub
    Partial Private Sub OnPROD_campo_1Changing(value As String)
    End Sub
    Partial Private Sub OnPROD_campo_1Changed()
    End Sub
    Partial Private Sub OnPROD_campo_2Changing(value As String)
    End Sub
    Partial Private Sub OnPROD_campo_2Changed()
    End Sub
    Partial Private Sub OnPROD_campo_3Changing(value As String)
    End Sub
    Partial Private Sub OnPROD_campo_3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PRODUCTO_MOVIMIENTO = New EntitySet(Of PRODUCTO_MOVIMIENTO)(AddressOf Me.attach_PRODUCTO_MOVIMIENTO, AddressOf Me.detach_PRODUCTO_MOVIMIENTO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROD_id() As Integer
		Get
			Return Me._PROD_id
		End Get
		Set
			If ((Me._PROD_id = value)  _
						= false) Then
				Me.OnPROD_idChanging(value)
				Me.SendPropertyChanging
				Me._PROD_id = value
				Me.SendPropertyChanged("PROD_id")
				Me.OnPROD_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_codigo", DbType:="VarChar(15)")>  _
	Public Property PROD_codigo() As String
		Get
			Return Me._PROD_codigo
		End Get
		Set
			If (String.Equals(Me._PROD_codigo, value) = false) Then
				Me.OnPROD_codigoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_codigo = value
				Me.SendPropertyChanged("PROD_codigo")
				Me.OnPROD_codigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PROD_descripcion() As String
		Get
			Return Me._PROD_descripcion
		End Get
		Set
			If (String.Equals(Me._PROD_descripcion, value) = false) Then
				Me.OnPROD_descripcionChanging(value)
				Me.SendPropertyChanging
				Me._PROD_descripcion = value
				Me.SendPropertyChanged("PROD_descripcion")
				Me.OnPROD_descripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_stock", DbType:="Int NOT NULL")>  _
	Public Property PROD_stock() As Integer
		Get
			Return Me._PROD_stock
		End Get
		Set
			If ((Me._PROD_stock = value)  _
						= false) Then
				Me.OnPROD_stockChanging(value)
				Me.SendPropertyChanging
				Me._PROD_stock = value
				Me.SendPropertyChanged("PROD_stock")
				Me.OnPROD_stockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_stock_minimo", DbType:="Int")>  _
	Public Property PROD_stock_minimo() As System.Nullable(Of Integer)
		Get
			Return Me._PROD_stock_minimo
		End Get
		Set
			If (Me._PROD_stock_minimo.Equals(value) = false) Then
				Me.OnPROD_stock_minimoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_stock_minimo = value
				Me.SendPropertyChanged("PROD_stock_minimo")
				Me.OnPROD_stock_minimoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_deposito", DbType:="VarChar(25)")>  _
	Public Property PROD_deposito() As String
		Get
			Return Me._PROD_deposito
		End Get
		Set
			If (String.Equals(Me._PROD_deposito, value) = false) Then
				Me.OnPROD_depositoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_deposito = value
				Me.SendPropertyChanged("PROD_deposito")
				Me.OnPROD_depositoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_campo_1", DbType:="VarChar(50)")>  _
	Public Property PROD_campo_1() As String
		Get
			Return Me._PROD_campo_1
		End Get
		Set
			If (String.Equals(Me._PROD_campo_1, value) = false) Then
				Me.OnPROD_campo_1Changing(value)
				Me.SendPropertyChanging
				Me._PROD_campo_1 = value
				Me.SendPropertyChanged("PROD_campo_1")
				Me.OnPROD_campo_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_campo_2", DbType:="VarChar(50)")>  _
	Public Property PROD_campo_2() As String
		Get
			Return Me._PROD_campo_2
		End Get
		Set
			If (String.Equals(Me._PROD_campo_2, value) = false) Then
				Me.OnPROD_campo_2Changing(value)
				Me.SendPropertyChanging
				Me._PROD_campo_2 = value
				Me.SendPropertyChanged("PROD_campo_2")
				Me.OnPROD_campo_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_campo_3", DbType:="VarChar(50)")>  _
	Public Property PROD_campo_3() As String
		Get
			Return Me._PROD_campo_3
		End Get
		Set
			If (String.Equals(Me._PROD_campo_3, value) = false) Then
				Me.OnPROD_campo_3Changing(value)
				Me.SendPropertyChanging
				Me._PROD_campo_3 = value
				Me.SendPropertyChanged("PROD_campo_3")
				Me.OnPROD_campo_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRODUCTO_PRODUCTO_MOVIMIENTO", Storage:="_PRODUCTO_MOVIMIENTO", ThisKey:="PROD_id", OtherKey:="PROD_id")>  _
	Public Property PRODUCTO_MOVIMIENTO() As EntitySet(Of PRODUCTO_MOVIMIENTO)
		Get
			Return Me._PRODUCTO_MOVIMIENTO
		End Get
		Set
			Me._PRODUCTO_MOVIMIENTO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_PRODUCTO_MOVIMIENTO(ByVal entity As PRODUCTO_MOVIMIENTO)
		Me.SendPropertyChanging
		entity.PRODUCTO = Me
	End Sub
	
	Private Sub detach_PRODUCTO_MOVIMIENTO(ByVal entity As PRODUCTO_MOVIMIENTO)
		Me.SendPropertyChanging
		entity.PRODUCTO = Nothing
	End Sub
End Class
